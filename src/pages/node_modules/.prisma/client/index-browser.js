
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.29.1
 * Query Engine version: 1be4cd60b89afa04b192acb1ef47758a39810f3a
 */
Prisma.prismaVersion = {
  client: "2.29.1",
  engine: "1be4cd60b89afa04b192acb1ef47758a39810f3a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.DescricaoEmbarqueScalarFieldEnum = makeEnum({
  Id: 'Id',
  Descricao: 'Descricao',
  Codigo: 'Codigo',
  Mostrar: 'Mostrar',
  prancha_bruta: 'prancha_bruta',
  prancha_emap: 'prancha_emap',
  Prancha: 'Prancha',
  Dono: 'Dono',
  Desc_English: 'Desc_English',
  Unidade: 'Unidade',
  Desc_Laytime: 'Desc_Laytime'
});

exports.Prisma.EmbarqueNavioScalarFieldEnum = makeEnum({
  Id: 'Id',
  NavioViagem: 'NavioViagem',
  Linha: 'Linha',
  Data: 'Data',
  Turno: 'Turno',
  Guindasteiro: 'Guindasteiro',
  Porao: 'Porao',
  Camada: 'Camada',
  Descricao: 'Descricao',
  DataHoraTerno: 'DataHoraTerno',
  Qtd: 'Qtd',
  Posicao: 'Posicao',
  Tipo: 'Tipo',
  Supervisor: 'Supervisor',
  Navio: 'Navio',
  status_navio: 'status_navio',
  Terno: 'Terno',
  Tempo: 'Tempo',
  Obs: 'Obs',
  Desc_English: 'Desc_English',
  Descricao_Motivo: 'Descricao_Motivo',
  periodo: 'periodo',
  data_incremental: 'data_incremental'
});

exports.Prisma.EmbarqueNavio_imagem_camadaScalarFieldEnum = makeEnum({
  id_EmbarqueNavio_imagem_camada: 'id_EmbarqueNavio_imagem_camada',
  NavioViagem: 'NavioViagem',
  porao: 'porao',
  camada: 'camada',
  imagem: 'imagem',
  descricao: 'descricao',
  url: 'url',
  imagem_nome: 'imagem_nome'
});

exports.Prisma.EmbarqueSOFScalarFieldEnum = makeEnum({
  Id: 'Id',
  Vessel: 'Vessel',
  berth: 'berth',
  SOF_Number: 'SOF_Number',
  Status_SOF: 'Status_SOF',
  VOY: 'VOY',
  Port: 'Port',
  Country: 'Country',
  Terminal: 'Terminal',
  Total_Quantity_Tons: 'Total_Quantity_Tons',
  Total_Quantity_Units: 'Total_Quantity_Units',
  Cargo: 'Cargo',
  Shipper: 'Shipper',
  Remarks: 'Remarks',
  Arrivel_Draft_FWD: 'Arrivel_Draft_FWD',
  Arrivel_Draft_AFT: 'Arrivel_Draft_AFT',
  Sailing_Draft_FWD: 'Sailing_Draft_FWD',
  Sailing_Draft_AFT: 'Sailing_Draft_AFT',
  Arrived_Roads: 'Arrived_Roads',
  Notice_Of_Readiness_Tendered: 'Notice_Of_Readiness_Tendered',
  Notice_Of_Readiness_Accepted: 'Notice_Of_Readiness_Accepted',
  Dropped_Anchor: 'Dropped_Anchor',
  Anchor_Up: 'Anchor_Up',
  POB_Berthing: 'POB_Berthing',
  First_Line_Ashore: 'First_Line_Ashore',
  All_Fast_Alongside: 'All_Fast_Alongside',
  Gangway_Placed_Ashore: 'Gangway_Placed_Ashore',
  Cleared_By_Port_Authorities: 'Cleared_By_Port_Authorities',
  End_Of_Preparations_On_Board: 'End_Of_Preparations_On_Board',
  Loading_Commenced: 'Loading_Commenced',
  Loading_Complete: 'Loading_Complete',
  Pilot_On_Board_For_Sailing: 'Pilot_On_Board_For_Sailing',
  Ship_Sailed: 'Ship_Sailed',
  ETA_In_The_Next_Port: 'ETA_In_The_Next_Port',
  Email: 'Email',
  horas_operacionais: 'horas_operacionais',
  meta_prancha: 'meta_prancha',
  qtd_ternos: 'qtd_ternos',
  status_embarque: 'status_embarque',
  armador: 'armador'
});

exports.Prisma.Navio_Sof_ArmadorScalarFieldEnum = makeEnum({
  Id: 'Id',
  arquivo: 'arquivo',
  Navio_Id: 'Navio_Id'
});

exports.Prisma.EmbarqueSOF_ArquivosScalarFieldEnum = makeEnum({
  idEmbarqueSOF_Arquivos: 'idEmbarqueSOF_Arquivos',
  sof_number: 'sof_number',
  NomeDocumentoFinal: 'NomeDocumentoFinal',
  ArquivoDocumentoFinal: 'ArquivoDocumentoFinal'
});

exports.Prisma.EmbarqueSOF_CabecalhoScalarFieldEnum = makeEnum({
  Id: 'Id',
  Campo: 'Campo',
  DataHora: 'DataHora',
  SOF_Number: 'SOF_Number'
});

exports.Prisma.EmbarqueSOF_Coluna_CabecalhoScalarFieldEnum = makeEnum({
  Id: 'Id',
  Coluna_Tabela: 'Coluna_Tabela',
  Colunas: 'Colunas',
  Ordem: 'Ordem',
  Adicionar: 'Adicionar'
});

exports.Prisma.EmbarqueSOF_HOLD_InspectionScalarFieldEnum = makeEnum({
  Id: 'Id',
  SOF_Number: 'SOF_Number',
  VOY: 'VOY',
  HOLD: 'HOLD',
  Date: 'Date',
  Bench: 'Bench',
  Overhang: 'Overhang'
});

exports.Prisma.EmbarqueSOF_Lista_CabecalhoScalarFieldEnum = makeEnum({
  Id: 'Id',
  Colunas: 'Colunas',
  Adicionar: 'Adicionar'
});

exports.Prisma.EmbarqueSOF_Port_DischargeScalarFieldEnum = makeEnum({
  Id: 'Id',
  Port_Of_Discharge: 'Port_Of_Discharge',
  QTY_Units: 'QTY_Units',
  QTY_Tons: 'QTY_Tons',
  Shippers: 'Shippers',
  SOF_Number: 'SOF_Number'
});

exports.Prisma.EmbarqueSOF_Ships_ParticularScalarFieldEnum = makeEnum({
  Id: 'Id',
  Vessel: 'Vessel',
  Lloyd_Register: 'Lloyd_Register',
  Flag: 'Flag',
  Charterer: 'Charterer',
  Bench: 'Bench',
  Class: 'Class',
  Owners: 'Owners',
  DWT: 'DWT',
  GRT: 'GRT',
  NET: 'NET',
  LOA: 'LOA',
  BEAM: 'BEAM',
  Crane_Capacity: 'Crane_Capacity',
  Type: 'Type',
  Especialty: 'Especialty',
  Type1: 'Type1',
  Crane: 'Crane',
  armador: 'armador'
});

exports.Prisma.EmbarqueSOF_StowPlanScalarFieldEnum = makeEnum({
  id_EmbarqueSOF_StowPlan: 'id_EmbarqueSOF_StowPlan',
  porao: 'porao',
  num_camada: 'num_camada',
  qtd_fardos: 'qtd_fardos',
  sof_number: 'sof_number'
});

exports.Prisma.EmbarqueSOF_TimeLineScalarFieldEnum = makeEnum({
  idEmbarqueSOF_TimeLine: 'idEmbarqueSOF_TimeLine',
  NavioViagem: 'NavioViagem',
  Data: 'Data',
  Turno: 'Turno',
  descricao: 'descricao',
  NomeNavio: 'NomeNavio'
});

exports.Prisma.EmbarqueSOF_WorkingTimesScalarFieldEnum = makeEnum({
  Id: 'Id',
  Turn_Time: 'Turn_Time',
  NavioViagem: 'NavioViagem',
  Data: 'Data',
  Porao: 'Porao',
  Conta: 'Conta',
  Desc_English: 'Desc_English',
  Inicio: 'Inicio',
  Fim: 'Fim',
  Tempo: 'Tempo',
  Tempo_Acumulado_D: 'Tempo_Acumulado_D',
  Tempo_Acumulado_H: 'Tempo_Acumulado_H',
  Qtd: 'Qtd',
  Terno: 'Terno',
  Linha: 'Linha',
  Turno: 'Turno',
  Guindasteiro: 'Guindasteiro',
  Camada: 'Camada',
  Descricao: 'Descricao',
  DataHoraTerno: 'DataHoraTerno',
  Posicao: 'Posicao',
  Tipo: 'Tipo',
  Supervisor: 'Supervisor',
  Navio: 'Navio',
  Obs: 'Obs',
  Em_Demurrage: 'Em_Demurrage',
  Porcentagem: 'Porcentagem',
  Qtd_Ternos: 'Qtd_Ternos',
  Tempo_Qtd_Ternos_D: 'Tempo_Qtd_Ternos_D',
  Tempo_Qtd_Ternos_H: 'Tempo_Qtd_Ternos_H',
  Hold_Discount: 'Hold_Discount'
});

exports.Prisma.EmbarqueSOF_emailScalarFieldEnum = makeEnum({
  id_EmbarqueSOF_email: 'id_EmbarqueSOF_email',
  nome: 'nome',
  email: 'email'
});

exports.Prisma.EmbarqueSOF_qualidadeScalarFieldEnum = makeEnum({
  id_EmbarqueSOF_qualidade: 'id_EmbarqueSOF_qualidade',
  SOF_Number: 'SOF_Number',
  lateral: 'lateral',
  base: 'base',
  rasgo: 'rasgo',
  impressao: 'impressao',
  arame_fardo: 'arame_fardo',
  inseto: 'inseto',
  desalinhado_max: 'desalinhado_max',
  desalinhado_random: 'desalinhado_random',
  data_inclusao: 'data_inclusao',
  quantidade_carreta: 'quantidade_carreta',
  numeracao: 'numeracao'
});

exports.Prisma.EmbarqueSOF_qualidade_fotoScalarFieldEnum = makeEnum({
  id_EmbarqueSOF_qualidade_foto: 'id_EmbarqueSOF_qualidade_foto',
  id_EmbarqueSOF_qualidade: 'id_EmbarqueSOF_qualidade',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Adonis_schemaScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  batch: 'batch',
  migration_time: 'migration_time'
});

exports.Prisma.ApplicationsScalarFieldEnum = makeEnum({
  id: 'id',
  url: 'url',
  display_name: 'display_name',
  icon: 'icon',
  module_id: 'module_id',
  visible: 'visible',
  order: 'order'
});

exports.Prisma.Atualizar_sheetsScalarFieldEnum = makeEnum({
  id_atualizar_sheets: 'id_atualizar_sheets',
  data: 'data',
  consulta: 'consulta',
  url: 'url',
  evento: 'evento',
  pagina: 'pagina',
  id_sheets: 'id_sheets',
  processado: 'processado'
});

exports.Prisma.Cadastro_agenciaScalarFieldEnum = makeEnum({
  id_cadastro_agencia: 'id_cadastro_agencia',
  nome_agencia: 'nome_agencia'
});

exports.Prisma.Cadastro_armadorScalarFieldEnum = makeEnum({
  id_cadastro_armador: 'id_cadastro_armador',
  nome_armador: 'nome_armador'
});

exports.Prisma.Cadastro_navioScalarFieldEnum = makeEnum({
  id_cadastro_navio: 'id_cadastro_navio',
  nome_navio: 'nome_navio',
  tipo: 'tipo'
});

exports.Prisma.Chamado_responsavel_cadastroScalarFieldEnum = makeEnum({
  id_chamado_responsavel_cadastro: 'id_chamado_responsavel_cadastro',
  nome: 'nome',
  email: 'email'
});

exports.Prisma.ChamadosScalarFieldEnum = makeEnum({
  id_chamados: 'id_chamados',
  n_chamado: 'n_chamado',
  data_abertura: 'data_abertura',
  usuario: 'usuario',
  email: 'email',
  usuario_solicitante: 'usuario_solicitante',
  email_solicitante: 'email_solicitante',
  setor_solicitante: 'setor_solicitante',
  atualizado_por: 'atualizado_por',
  motivo: 'motivo',
  status_chamados: 'status_chamados',
  data_finalizacao: 'data_finalizacao',
  solucao: 'solucao',
  foto: 'foto',
  data_prazo: 'data_prazo',
  tipo_chamado: 'tipo_chamado',
  responsavel: 'responsavel',
  responsavel_email: 'responsavel_email'
});

exports.Prisma.Chamados_historicoScalarFieldEnum = makeEnum({
  id_chamados_historico: 'id_chamados_historico',
  id_chamados: 'id_chamados',
  report: 'report',
  observacao: 'observacao',
  data_report: 'data_report',
  usuario: 'usuario'
});

exports.Prisma.Chamados_setorScalarFieldEnum = makeEnum({
  id_chamados_setor: 'id_chamados_setor',
  setor: 'setor'
});

exports.Prisma.Contas_cadastro_bancosScalarFieldEnum = makeEnum({
  id_contas_cadastro_bancos: 'id_contas_cadastro_bancos',
  banco: 'banco',
  taxa_juros: 'taxa_juros',
  conta_corrente: 'conta_corrente'
});

exports.Prisma.Desempenho_assinaturaScalarFieldEnum = makeEnum({
  id_desempenho_assinatura: 'id_desempenho_assinatura',
  id_desempenho_avaliacao: 'id_desempenho_avaliacao',
  assinatura_avaliador: 'assinatura_avaliador',
  assinatura_avaliado: 'assinatura_avaliado'
});

exports.Prisma.Desempenho_assinatura_desempenhoScalarFieldEnum = makeEnum({
  id_desempenho_assinatura_desempenho: 'id_desempenho_assinatura_desempenho',
  id_desempenho_avaliacao: 'id_desempenho_avaliacao',
  assinatura_avaliador: 'assinatura_avaliador',
  assinatura_avaliado: 'assinatura_avaliado'
});

exports.Prisma.Desempenho_avaliacaoScalarFieldEnum = makeEnum({
  id_desempenho_avaliacao: 'id_desempenho_avaliacao',
  login: 'login',
  setor: 'setor',
  data_avaliacao: 'data_avaliacao',
  nome_avaliador: 'nome_avaliador',
  nota_geral: 'nota_geral',
  observacao: 'observacao',
  status_avaliacao: 'status_avaliacao',
  nota_comportamental: 'nota_comportamental',
  nota_desempenho: 'nota_desempenho',
  status_nota_desempenho: 'status_nota_desempenho'
});

exports.Prisma.Desempenho_item_desempenhoScalarFieldEnum = makeEnum({
  id_desempenho_item_desempenho: 'id_desempenho_item_desempenho',
  id_desempenho_avaliacao: 'id_desempenho_avaliacao',
  item: 'item',
  notas: 'notas'
});

exports.Prisma.Desempenho_itensScalarFieldEnum = makeEnum({
  id_desempenho_itens: 'id_desempenho_itens',
  id_desempenho_avaliacao: 'id_desempenho_avaliacao',
  item: 'item',
  observacao: 'observacao',
  notas: 'notas'
});

exports.Prisma.Desempenho_itens_cadastroScalarFieldEnum = makeEnum({
  desempenho_itens_cadastro: 'desempenho_itens_cadastro',
  item: 'item',
  setor: 'setor'
});

exports.Prisma.Desempenho_itens_desempenho_cadastroScalarFieldEnum = makeEnum({
  id_desempenho_itens_desempenho_cadastro: 'id_desempenho_itens_desempenho_cadastro',
  item: 'item'
});

exports.Prisma.Desempenho_setor_cadastroScalarFieldEnum = makeEnum({
  id_desempenho_setor_cadastro: 'id_desempenho_setor_cadastro',
  setor: 'setor'
});

exports.Prisma.Embarque_poroesScalarFieldEnum = makeEnum({
  id_embarque_poroes: 'id_embarque_poroes',
  SOF_Number: 'SOF_Number',
  porao: 'porao',
  planejado: 'planejado',
  embarcado: 'embarcado',
  saldo: 'saldo',
  id_embarque_navio: 'id_embarque_navio'
});

exports.Prisma.Empilhadeira_checklist_controle_emailScalarFieldEnum = makeEnum({
  id_empilhadeira_checklist_controle_email: 'id_empilhadeira_checklist_controle_email',
  login: 'login'
});

exports.Prisma.Empilhadeiras_area_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_area_cadastro: 'id_empilhadeiras_area_cadastro',
  area: 'area'
});

exports.Prisma.Empilhadeiras_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_cadastro: 'id_empilhadeiras_cadastro',
  descricao: 'descricao',
  modelo: 'modelo',
  situacao: 'situacao',
  status_empilhadeira: 'status_empilhadeira'
});

exports.Prisma.Empilhadeiras_checklistScalarFieldEnum = makeEnum({
  id_empilhadeiras_checklist: 'id_empilhadeiras_checklist',
  data: 'data',
  nome_operadores: 'nome_operadores',
  empilhadeiras: 'empilhadeiras',
  area: 'area',
  local: 'local',
  turno: 'turno'
});

exports.Prisma.Empilhadeiras_checklist_itensScalarFieldEnum = makeEnum({
  id_empilhadeiras_checklist_itens: 'id_empilhadeiras_checklist_itens',
  id_empilhadeiras_checklist: 'id_empilhadeiras_checklist',
  id_empilhadeiras_checklist_verificacao: 'id_empilhadeiras_checklist_verificacao',
  status_atual: 'status_atual',
  observacao: 'observacao',
  verificacao: 'verificacao'
});

exports.Prisma.Empilhadeiras_checklist_operadores_2ScalarFieldEnum = makeEnum({
  id_empilhadeiras_checklist_operadores_2: 'id_empilhadeiras_checklist_operadores_2',
  data: 'data',
  equipamento: 'equipamento',
  operador: 'operador',
  area: 'area',
  local: 'local',
  turno: 'turno'
});

exports.Prisma.Empilhadeiras_checklist_verificacaoScalarFieldEnum = makeEnum({
  id_empilhadeiras_checklist_verificacao: 'id_empilhadeiras_checklist_verificacao',
  verificacao: 'verificacao',
  parametro: 'parametro',
  codigo_acao: 'codigo_acao',
  modelo: 'modelo'
});

exports.Prisma.Empilhadeiras_checklist_verificacao_modeloScalarFieldEnum = makeEnum({
  id_empilhadeiras_checklist_verificacao_modelo: 'id_empilhadeiras_checklist_verificacao_modelo',
  verificacao: 'verificacao',
  parametro: 'parametro',
  codigo_acao: 'codigo_acao',
  modelo: 'modelo'
});

exports.Prisma.Empilhadeiras_cod_acao_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_cod_acao_cadastro: 'id_empilhadeiras_cod_acao_cadastro',
  cod_acao: 'cod_acao'
});

exports.Prisma.Empilhadeiras_cod_legendaScalarFieldEnum = makeEnum({
  id_empilhadeiras_cod_legenda: 'id_empilhadeiras_cod_legenda',
  cod_legenda: 'cod_legenda',
  legenda: 'legenda'
});

exports.Prisma.Empilhadeiras_local_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_local_cadastro: 'id_empilhadeiras_local_cadastro',
  local: 'local'
});

exports.Prisma.Empilhadeiras_modeloScalarFieldEnum = makeEnum({
  id_empilhadeiras_modelo: 'id_empilhadeiras_modelo',
  modelo: 'modelo'
});

exports.Prisma.Empilhadeiras_notificacoesScalarFieldEnum = makeEnum({
  id_empilhadeiras_notificacoes: 'id_empilhadeiras_notificacoes',
  cod_grupo: 'cod_grupo',
  texto_mensagem: 'texto_mensagem',
  data_inicial: 'data_inicial',
  data_final: 'data_final'
});

exports.Prisma.Empilhadeiras_op_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_op_cadastro: 'id_empilhadeiras_op_cadastro',
  nome_operadores: 'nome_operadores'
});

exports.Prisma.Empilhadeiras_situacaoScalarFieldEnum = makeEnum({
  id_empilhadeiras_situacao: 'id_empilhadeiras_situacao',
  situacao: 'situacao'
});

exports.Prisma.Empilhadeiras_statusScalarFieldEnum = makeEnum({
  id_empilhadeiras_status: 'id_empilhadeiras_status',
  id_empilhadeiras_cadastro: 'id_empilhadeiras_cadastro',
  descricao: 'descricao',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  tempo: 'tempo',
  status_atual: 'status_atual',
  operador: 'operador'
});

exports.Prisma.Empilhadeiras_status_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_status_cadastro: 'id_empilhadeiras_status_cadastro',
  status: 'status'
});

exports.Prisma.Empilhadeiras_statusatualScalarFieldEnum = makeEnum({
  id_empilhadeiras_statusatual: 'id_empilhadeiras_statusatual',
  status_atual: 'status_atual'
});

exports.Prisma.Empilhadeiras_troca_de_gasScalarFieldEnum = makeEnum({
  id_empilhadeiras_troca_de_gas: 'id_empilhadeiras_troca_de_gas',
  id_empilhadeira_status: 'id_empilhadeira_status',
  operador: 'operador',
  empilhadeira: 'empilhadeira',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  tempo: 'tempo',
  status_atual: 'status_atual'
});

exports.Prisma.Empilhadeiras_turno_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_turno_cadastro: 'id_empilhadeiras_turno_cadastro',
  turno: 'turno'
});

exports.Prisma.Faturamento_cteScalarFieldEnum = makeEnum({
  id_faturamento_cte: 'id_faturamento_cte',
  emissao: 'emissao',
  cliente: 'cliente',
  titulo: 'titulo',
  vencimento: 'vencimento',
  valor: 'valor',
  dias_atrasados: 'dias_atrasados',
  pagamento_realizado: 'pagamento_realizado',
  data_pagamento: 'data_pagamento',
  data_negociacao: 'data_negociacao',
  banco: 'banco',
  creditado: 'creditado',
  juros: 'juros',
  conta_corrente: 'conta_corrente',
  usuario_responsavel: 'usuario_responsavel',
  data_atualizacao: 'data_atualizacao',
  placa: 'placa',
  motorista: 'motorista',
  impostos: 'impostos',
  combustivel: 'combustivel',
  arla: 'arla',
  pedagio: 'pedagio',
  motorista_custo: 'motorista_custo',
  dias_viagem: 'dias_viagem',
  diarias: 'diarias',
  locacao_prestacao: 'locacao_prestacao',
  km_inicial: 'km_inicial',
  km_final: 'km_final',
  frete: 'frete',
  id_faturamento_performace_placas: 'id_faturamento_performace_placas',
  diaria: 'diaria'
});

exports.Prisma.Faturamento_performace_placasScalarFieldEnum = makeEnum({
  id_faturamento_performace_placas: 'id_faturamento_performace_placas',
  data_performace: 'data_performace',
  placa: 'placa',
  motorista: 'motorista',
  faturamento: 'faturamento',
  impostos: 'impostos',
  combustivel: 'combustivel',
  arla: 'arla',
  pedagio: 'pedagio',
  motorista_custo: 'motorista_custo',
  dias_viagens: 'dias_viagens',
  diarias: 'diarias',
  locacao_prestacao: 'locacao_prestacao',
  manutencao: 'manutencao',
  saldo: 'saldo',
  percentual: 'percentual',
  despesa_total: 'despesa_total',
  km_inicial: 'km_inicial',
  km_final: 'km_final',
  km: 'km',
  data_atualizacao: 'data_atualizacao',
  frete: 'frete'
});

exports.Prisma.Faturamento_placa_cadastroScalarFieldEnum = makeEnum({
  id_faturamento_placa_cadastro: 'id_faturamento_placa_cadastro',
  placa: 'placa',
  media_padrao_km: 'media_padrao_km',
  frota: 'frota'
});

exports.Prisma.Frota_local_cadastroScalarFieldEnum = makeEnum({
  id_frota_local_cadastro: 'id_frota_local_cadastro',
  local: 'local'
});

exports.Prisma.Frota_statusScalarFieldEnum = makeEnum({
  id_frota_status: 'id_frota_status',
  placa: 'placa',
  status_frota: 'status_frota',
  nome: 'nome',
  data_inicial: 'data_inicial',
  data_final: 'data_final',
  tempo: 'tempo',
  local_atual: 'local_atual'
});

exports.Prisma.G5_contatoScalarFieldEnum = makeEnum({
  id_g5_contato: 'id_g5_contato',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  assunto: 'assunto',
  mensagem: 'mensagem'
});

exports.Prisma.Gas_cadastroScalarFieldEnum = makeEnum({
  id_gas_cadastro: 'id_gas_cadastro',
  data_hora: 'data_hora',
  turno: 'turno',
  usuario: 'usuario',
  empilhadeira: 'empilhadeira'
});

exports.Prisma.Gas_inventarioScalarFieldEnum = makeEnum({
  id_gas_inventario: 'id_gas_inventario',
  assinatura1: 'assinatura1',
  assinatura2: 'assinatura2',
  recebido: 'recebido',
  saida: 'saida',
  cheios: 'cheios',
  vazios: 'vazios',
  avariados: 'avariados',
  total: 'total',
  data_hora: 'data_hora',
  usuario: 'usuario',
  nome_assinatura: 'nome_assinatura'
});

exports.Prisma.Group_permissionScalarFieldEnum = makeEnum({
  id: 'id',
  group_id: 'group_id',
  canUpdate: 'canUpdate',
  canInsert: 'canInsert',
  canDelete: 'canDelete',
  canView: 'canView',
  route_id: 'route_id'
});

exports.Prisma.GroupsScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  module_id: 'module_id',
  display_name: 'display_name'
});

exports.Prisma.Imp_empilhadeiras_cadastroScalarFieldEnum = makeEnum({
  id_empilhadeiras_cadastro: 'id_empilhadeiras_cadastro',
  descricao: 'descricao',
  modelo: 'modelo',
  situacao: 'situacao',
  status_empilhadeira: 'status_empilhadeira'
});

exports.Prisma.Imp_manutencao_motivosScalarFieldEnum = makeEnum({
  id_manutencao_motivos: 'id_manutencao_motivos',
  motivos: 'motivos'
});

exports.Prisma.Imp_manutencao_motivos_mecanicoScalarFieldEnum = makeEnum({
  id_manutencao_motivos_mecanico: 'id_manutencao_motivos_mecanico',
  motivos: 'motivos'
});

exports.Prisma.Imp_manutencao_motivos_principalScalarFieldEnum = makeEnum({
  id_manutencao_motivos_principal: 'id_manutencao_motivos_principal',
  id_empilhadeiras_status: 'id_empilhadeiras_status',
  status: 'status',
  empilhadeira: 'empilhadeira',
  operador: 'operador',
  mecanico: 'mecanico',
  motivo: 'motivo',
  motivo_mecanico: 'motivo_mecanico',
  hora_inicio_atendimento: 'hora_inicio_atendimento',
  hora_final_atendimento: 'hora_final_atendimento',
  hora_manutencao: 'hora_manutencao',
  tempo_manutencao: 'tempo_manutencao',
  tempo_atendimento: 'tempo_atendimento',
  previsao_retorno: 'previsao_retorno'
});

exports.Prisma.Imp_trem_carregamentoScalarFieldEnum = makeEnum({
  id_trem: 'id_trem',
  desc_ferrovia: 'desc_ferrovia',
  viagem: 'viagem',
  data_viagem: 'data_viagem',
  qtd_vagoes: 'qtd_vagoes'
});

exports.Prisma.Imp_trem_carregamento_empilhadeiraScalarFieldEnum = makeEnum({
  id_emp_viagem: 'id_emp_viagem',
  viagem: 'viagem',
  modelo: 'modelo',
  n_puxada: 'n_puxada'
});

exports.Prisma.Imp_trem_carregamento_viagemScalarFieldEnum = makeEnum({
  id_puxada: 'id_puxada',
  viagem: 'viagem',
  n_puxada: 'n_puxada',
  qtd_vagoes: 'qtd_vagoes',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  tempo_impacto: 'tempo_impacto',
  tempo_bruto: 'tempo_bruto',
  tempo_liquido: 'tempo_liquido',
  qtd_empilhadeira: 'qtd_empilhadeira'
});

exports.Prisma.Imp_trem_viagemScalarFieldEnum = makeEnum({
  id_trem_viagem: 'id_trem_viagem',
  viagem: 'viagem',
  tempo_bruto: 'tempo_bruto',
  tempo_liquido: 'tempo_liquido',
  tempo_impacto: 'tempo_impacto',
  data_viagem: 'data_viagem',
  quantidade: 'quantidade',
  status_trem: 'status_trem',
  tempo_ciclo: 'tempo_ciclo',
  tempo_impacto_ciclo: 'tempo_impacto_ciclo'
});

exports.Prisma.Imp_trem_viagem_dadosScalarFieldEnum = makeEnum({
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  viagem: 'viagem',
  linha: 'linha',
  quantidade: 'quantidade',
  posicionamento: 'posicionamento',
  abertura: 'abertura',
  descarga_inicio: 'descarga_inicio',
  descarga_fim: 'descarga_fim',
  fechamento: 'fechamento',
  retirada: 'retirada',
  tc: 'tc',
  cf: 'cf',
  ec: 'ec',
  desc_bruta: 'desc_bruta',
  desc_liquida: 'desc_liquida',
  tempo_impactos: 'tempo_impactos',
  tempo_troca: 'tempo_troca',
  telegram_usuario: 'telegram_usuario',
  telegram_hora: 'telegram_hora',
  usuario: 'usuario'
});

exports.Prisma.Imp_trem_viagem_dados_empilhadeirasScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_empilhadeiras: 'id_trem_viagem_dados_empilhadeiras',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  descricao: 'descricao',
  modelo: 'modelo'
});

exports.Prisma.Imp_trem_viagem_dados_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_impactos: 'id_trem_viagem_dados_impactos',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  tempo: 'tempo',
  impacto: 'impacto',
  motivos: 'motivos',
  empresa: 'empresa'
});

exports.Prisma.Imp_trem_viagem_dados_vagoesScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes: 'id_trem_viagem_dados_vagoes',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  numero: 'numero',
  descricao: 'descricao',
  vagoes: 'vagoes',
  nf: 'nf',
  material: 'material',
  tons: 'tons',
  vao: 'vao',
  tons_2: 'tons_2',
  vao_2: 'vao_2',
  obs: 'obs',
  linha: 'linha',
  data_atual: 'data_atual'
});

exports.Prisma.Imp_trem_viagem_dados_vagoes_emailScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes_email: 'id_trem_viagem_dados_vagoes_email',
  nome: 'nome',
  email: 'email'
});

exports.Prisma.Imp_trem_viagem_dados_vagoes_planejamentoScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes_planejamento: 'id_trem_viagem_dados_vagoes_planejamento',
  viagem: 'viagem',
  linha: 'linha',
  vagao: 'vagao',
  nf: 'nf',
  material: 'material',
  tons: 'tons',
  vao: 'vao',
  tons_2: 'tons_2',
  vao_2: 'vao_2',
  obs: 'obs',
  data_hora_atualizacao: 'data_hora_atualizacao'
});

exports.Prisma.Imp_trem_viagem_fonte_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_fonte_impactos: 'id_trem_viagem_fonte_impactos',
  empresa: 'empresa'
});

exports.Prisma.Imp_trem_viagem_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_impactos: 'id_trem_viagem_impactos',
  impacto: 'impacto',
  empresa: 'empresa'
});

exports.Prisma.Imp_trem_viagem_linhasScalarFieldEnum = makeEnum({
  id_trem_viagem_linha: 'id_trem_viagem_linha',
  linha: 'linha'
});

exports.Prisma.Imp_trem_viagem_qualidadeScalarFieldEnum = makeEnum({
  id_trem_viagem_qualidade: 'id_trem_viagem_qualidade',
  viagem: 'viagem',
  lote: 'lote',
  linha: 'linha',
  ftt: 'ftt',
  lateral: 'lateral',
  base: 'base',
  rasgo: 'rasgo',
  impressao: 'impressao',
  arame_fardo: 'arame_fardo',
  inseto: 'inseto',
  desalinhado_max: 'desalinhado_max',
  desalinhado_random: 'desalinhado_random'
});

exports.Prisma.Imp_trem_viagem_qualidade_fotosScalarFieldEnum = makeEnum({
  id_trem_viagem_qualidade_fotos: 'id_trem_viagem_qualidade_fotos',
  id_trem_viagem_qualidade: 'id_trem_viagem_qualidade',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Indicador_navioScalarFieldEnum = makeEnum({
  id_indicador_navio: 'id_indicador_navio',
  data: 'data',
  data_hora_fim: 'data_hora_fim',
  navio_viagem: 'navio_viagem',
  nome_navio: 'nome_navio',
  berco: 'berco',
  eta: 'eta',
  etb: 'etb',
  etc: 'etc',
  qtd_planejada: 'qtd_planejada',
  qtd_carregada: 'qtd_carregada',
  tipo: 'tipo',
  nome_armador: 'nome_armador',
  prancha_bruta: 'prancha_bruta',
  prancha_liquida: 'prancha_liquida',
  turno: 'turno',
  nome_agencia: 'nome_agencia',
  impacto: 'impacto',
  impacto_segundos: 'impacto_segundos'
});

exports.Prisma.Indicador_navio_eventosScalarFieldEnum = makeEnum({
  id_indicador_navio_eventos: 'id_indicador_navio_eventos',
  code: 'code',
  eventos: 'eventos',
  grupo: 'grupo'
});

exports.Prisma.Indicador_navio_horaScalarFieldEnum = makeEnum({
  id_indicador_navio_hora: 'id_indicador_navio_hora',
  hora_txt: 'hora_txt',
  id_hora: 'id_hora',
  turno: 'turno'
});

exports.Prisma.Indicador_navio_impactosScalarFieldEnum = makeEnum({
  id_indicador_navio_impactos: 'id_indicador_navio_impactos',
  id_indicador_navio_terno: 'id_indicador_navio_terno',
  impacto: 'impacto',
  descricao: 'descricao',
  terno: 'terno',
  inicio_impacto: 'inicio_impacto',
  fim_impacto: 'fim_impacto',
  observacao: 'observacao'
});

exports.Prisma.Indicador_navio_prancha_ternosScalarFieldEnum = makeEnum({
  id_indicador_navio_prancha_ternos: 'id_indicador_navio_prancha_ternos',
  id_indicador_navio: 'id_indicador_navio',
  data: 'data',
  turno: 'turno',
  impacto: 'impacto',
  periodo: 'periodo',
  tempo_bruto: 'tempo_bruto',
  tempo_liquido: 'tempo_liquido',
  prancha_bruta: 'prancha_bruta',
  prancha_liquida: 'prancha_liquida',
  terno: 'terno'
});

exports.Prisma.Indicador_navio_ternoScalarFieldEnum = makeEnum({
  id_indicador_navio_terno: 'id_indicador_navio_terno',
  id_indicador_navio: 'id_indicador_navio',
  terno: 'terno',
  data: 'data',
  hora: 'hora',
  hora2: 'hora2',
  tons: 'tons',
  tons_h: 'tons_h',
  meta: 'meta',
  turno: 'turno',
  impacto: 'impacto',
  impacto_segundos: 'impacto_segundos',
  hora_inicio: 'hora_inicio',
  hora_fim: 'hora_fim',
  porao: 'porao'
});

exports.Prisma.Indicador_navio_terno_lingadasScalarFieldEnum = makeEnum({
  id_indicador_navio_terno_lingadas: 'id_indicador_navio_terno_lingadas',
  id_indicador_navio_terno: 'id_indicador_navio_terno',
  camada: 'camada',
  quantidade: 'quantidade',
  porao: 'porao',
  id_indicador_navio: 'id_indicador_navio'
});

exports.Prisma.Indicador_navio_turnoScalarFieldEnum = makeEnum({
  id__indicador_navio_turno: 'id__indicador_navio_turno',
  turno: 'turno',
  hora: 'hora'
});

exports.Prisma.Indicadores_cadastro_navioScalarFieldEnum = makeEnum({
  id_cadastro_navio: 'id_cadastro_navio',
  nome_navio: 'nome_navio',
  tipo: 'tipo'
});

exports.Prisma.Inventario_dadosScalarFieldEnum = makeEnum({
  id_inventario_dados: 'id_inventario_dados',
  id_inventario_principal: 'id_inventario_principal',
  vao: 'vao',
  NI: 'NI',
  capa: 'capa',
  numero: 'numero',
  subvao: 'subvao',
  qtd_fisica: 'qtd_fisica',
  qtd_sistema: 'qtd_sistema',
  qtd_diferenca: 'qtd_diferenca',
  observacao: 'observacao',
  qtd_30: 'qtd_30',
  qtd_36: 'qtd_36',
  qtd_46: 'qtd_46',
  frente: 'frente'
});

exports.Prisma.Inventario_operacoes_turnoScalarFieldEnum = makeEnum({
  id_inventario_operacoes_turno: 'id_inventario_operacoes_turno',
  id_inventario_principal: 'id_inventario_principal',
  vao: 'vao',
  numero: 'numero',
  subvao: 'subvao',
  qtd_tons: 'qtd_tons',
  linha: 'linha',
  viagem: 'viagem',
  obs: 'obs'
});

exports.Prisma.Inventario_principalScalarFieldEnum = makeEnum({
  id_inventario_principal: 'id_inventario_principal',
  nome: 'nome',
  turno: 'turno',
  data_hora: 'data_hora',
  data_hora_finalizado: 'data_hora_finalizado',
  status_inventario: 'status_inventario',
  assinatura: 'assinatura',
  assinatura2: 'assinatura2',
  observacao: 'observacao',
  responsavel: 'responsavel',
  usar_assinatura_usuario: 'usar_assinatura_usuario'
});

exports.Prisma.Inventario_vaoScalarFieldEnum = makeEnum({
  id_inventario_vao: 'id_inventario_vao',
  vao: 'vao',
  numero: 'numero',
  subvao: 'subvao'
});

exports.Prisma.Line_upScalarFieldEnum = makeEnum({
  id_line_up: 'id_line_up',
  descricao: 'descricao',
  berco: 'berco',
  navio: 'navio',
  operacao: 'operacao',
  bordo: 'bordo',
  comp: 'comp',
  dwt: 'dwt',
  carga: 'carga',
  qtd_carga: 'qtd_carga',
  calado: 'calado',
  agencia: 'agencia',
  ultima_atualizacao: 'ultima_atualizacao',
  previsao_chegada: 'previsao_chegada',
  previsao_atracar: 'previsao_atracar'
});

exports.Prisma.LogScalarFieldEnum = makeEnum({
  id: 'id',
  user: 'user',
  url: 'url',
  method: 'method',
  body: 'body',
  created_at: 'created_at'
});

exports.Prisma.Manuntencao_combustivelScalarFieldEnum = makeEnum({
  id_manuntencao_combustivel: 'id_manuntencao_combustivel',
  centro_custo: 'centro_custo',
  descricao: 'descricao',
  tipo_abastecimento: 'tipo_abastecimento',
  realizado_litros: 'realizado_litros',
  orcado: 'orcado',
  realizado_valor: 'realizado_valor',
  competencia: 'competencia',
  valor_litro: 'valor_litro'
});

exports.Prisma.Manutencao_motivosScalarFieldEnum = makeEnum({
  id_manutencao_motivos: 'id_manutencao_motivos',
  motivos: 'motivos'
});

exports.Prisma.Manutencao_motivos_mecanicoScalarFieldEnum = makeEnum({
  id_manutencao_motivos_mecanico: 'id_manutencao_motivos_mecanico',
  motivos: 'motivos'
});

exports.Prisma.Manutencao_motivos_principalScalarFieldEnum = makeEnum({
  id_manutencao_motivos_principal: 'id_manutencao_motivos_principal',
  id_empilhadeiras_status: 'id_empilhadeiras_status',
  status: 'status',
  empilhadeira: 'empilhadeira',
  operador: 'operador',
  mecanico: 'mecanico',
  motivo: 'motivo',
  motivo_mecanico: 'motivo_mecanico',
  hora_inicio_atendimento: 'hora_inicio_atendimento',
  hora_final_atendimento: 'hora_final_atendimento',
  hora_manutencao: 'hora_manutencao',
  tempo_manutencao: 'tempo_manutencao',
  tempo_atendimento: 'tempo_atendimento',
  previsao_retorno: 'previsao_retorno'
});

exports.Prisma.Mecanica_checklistScalarFieldEnum = makeEnum({
  id_mecanica_checklist: 'id_mecanica_checklist',
  id_mecanica_checklist_principal: 'id_mecanica_checklist_principal',
  item: 'item',
  status_item: 'status_item',
  observacao: 'observacao',
  tem_foto: 'tem_foto'
});

exports.Prisma.Mecanica_checklist_fotoScalarFieldEnum = makeEnum({
  id_mecanica_checklist_foto: 'id_mecanica_checklist_foto',
  id_mecanica_checklist: 'id_mecanica_checklist',
  foto: 'foto',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Mecanica_checklist_inconformidadeScalarFieldEnum = makeEnum({
  id_mecanica_checklist_inconformidade: 'id_mecanica_checklist_inconformidade',
  id_mecanica_checklist_principal: 'id_mecanica_checklist_principal',
  item: 'item',
  observacao: 'observacao',
  responsavel_checklist: 'responsavel_checklist',
  responsavel_mecanico: 'responsavel_mecanico'
});

exports.Prisma.Mecanica_checklist_itensScalarFieldEnum = makeEnum({
  id_Imecanica_checklist_itens: 'id_Imecanica_checklist_itens',
  Itens: 'Itens',
  Tipo: 'Tipo'
});

exports.Prisma.Mecanica_checklist_principalScalarFieldEnum = makeEnum({
  id_mecanica_checklist_principal: 'id_mecanica_checklist_principal',
  nome: 'nome',
  frota: 'frota',
  data_hora_inicio: 'data_hora_inicio',
  data_hora_final: 'data_hora_final',
  km_inicial: 'km_inicial',
  combustivel_inicial: 'combustivel_inicial',
  status_cheklist: 'status_cheklist',
  semirreboque: 'semirreboque',
  tipo_checklist: 'tipo_checklist',
  nome_assinatura1: 'nome_assinatura1',
  assinatura1: 'assinatura1',
  nome_assinatura2: 'nome_assinatura2',
  assinatura2: 'assinatura2',
  tipo_check: 'tipo_check'
});

exports.Prisma.Mecanica_disponibilidadeScalarFieldEnum = makeEnum({
  id_mecanica_disponibilidade: 'id_mecanica_disponibilidade',
  equipamento: 'equipamento',
  status_equipamento: 'status_equipamento',
  arquivo: 'arquivo',
  url: 'url',
  problema: 'problema',
  acao: 'acao',
  status_manutencao: 'status_manutencao',
  data_parada: 'data_parada',
  data_previsao_retorno: 'data_previsao_retorno',
  data_retorno: 'data_retorno',
  ordem_servico: 'ordem_servico',
  unidade: 'unidade',
  data_atualizacao: 'data_atualizacao',
  identificacao: 'identificacao',
  status_suprimentos: 'status_suprimentos'
});

exports.Prisma.Mecanica_frotaScalarFieldEnum = makeEnum({
  id_mecaninca_frota: 'id_mecaninca_frota',
  frota: 'frota',
  placa: 'placa',
  fabricante_modelo: 'fabricante_modelo',
  ano_fabricacao: 'ano_fabricacao',
  ano_modelo: 'ano_modelo',
  chassi: 'chassi',
  renavam: 'renavam',
  centro_custo: 'centro_custo',
  km_hr_atual: 'km_hr_atual',
  km_hr: 'km_hr',
  situacao_real: 'situacao_real'
});

exports.Prisma.Mecanica_painelScalarFieldEnum = makeEnum({
  id_mecanica_painel: 'id_mecanica_painel',
  data_hora: 'data_hora',
  operador: 'operador',
  frota: 'frota',
  semirreboque: 'semirreboque',
  itens: 'itens',
  status_mecanica: 'status_mecanica',
  status_descricao: 'status_descricao',
  prazo: 'prazo',
  data_finalizacao: 'data_finalizacao'
});

exports.Prisma.Mecanica_semirreboqueScalarFieldEnum = makeEnum({
  id_mecanica_semirreboque: 'id_mecanica_semirreboque',
  frota: 'frota',
  placa: 'placa'
});

exports.Prisma.ModulesScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  base_url: 'base_url',
  icon: 'icon',
  slug: 'slug',
  order: 'order'
});

exports.Prisma.ProcedimentosScalarFieldEnum = makeEnum({
  id_procedimentos: 'id_procedimentos',
  descricao: 'descricao',
  nome: 'nome',
  tamanho: 'tamanho',
  arquivo: 'arquivo',
  youtube: 'youtube'
});

exports.Prisma.ProjetosScalarFieldEnum = makeEnum({
  id_projetos: 'id_projetos',
  projeto: 'projeto',
  descricao: 'descricao',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  data_conclusao: 'data_conclusao',
  porcentagem: 'porcentagem',
  status_projeto: 'status_projeto',
  qtd_dias_uteis: 'qtd_dias_uteis',
  area: 'area',
  tipo: 'tipo',
  orcamento: 'orcamento',
  realizado: 'realizado',
  saldo: 'saldo',
  ordem_investimento: 'ordem_investimento'
});

exports.Prisma.Projetos_capex_opexScalarFieldEnum = makeEnum({
  id_projetos_capex_opex: 'id_projetos_capex_opex',
  capex_opex: 'capex_opex',
  id_projetos_principal: 'id_projetos_principal'
});

exports.Prisma.Projetos_gastosScalarFieldEnum = makeEnum({
  id_projetos_gastos: 'id_projetos_gastos',
  id_projeto: 'id_projeto',
  id_modulo: 'id_modulo',
  projeto: 'projeto',
  modulo: 'modulo',
  data_gasto: 'data_gasto',
  valor: 'valor',
  data_atualizacao: 'data_atualizacao',
  usuario_responsavel: 'usuario_responsavel'
});

exports.Prisma.Projetos_itensScalarFieldEnum = makeEnum({
  id_projetos_itens: 'id_projetos_itens',
  id_projetos_principal: 'id_projetos_principal',
  descricao_item: 'descricao_item',
  responsavel: 'responsavel',
  empresa: 'empresa',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  data_conclusao: 'data_conclusao',
  porcentagem: 'porcentagem',
  observacao: 'observacao',
  status_item: 'status_item',
  qtd_dias_uteis: 'qtd_dias_uteis'
});

exports.Prisma.Projetos_itens_empresaScalarFieldEnum = makeEnum({
  id_projetos_itens_empresa: 'id_projetos_itens_empresa',
  empresa: 'empresa'
});

exports.Prisma.Projetos_principalScalarFieldEnum = makeEnum({
  id_projetos_principal: 'id_projetos_principal',
  id_projeto: 'id_projeto',
  responsavel: 'responsavel',
  responsavel_2: 'responsavel_2',
  nome_projeto: 'nome_projeto',
  descricao_projeto: 'descricao_projeto',
  qtd_planejado: 'qtd_planejado',
  qtd_executado: 'qtd_executado',
  qtd_atrasado: 'qtd_atrasado',
  data_criacao: 'data_criacao',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  data_atualizacao: 'data_atualizacao',
  data_conclusao: 'data_conclusao',
  porcentagem: 'porcentagem',
  status_projeto_principal: 'status_projeto_principal',
  projeto: 'projeto',
  inf_investimento: 'inf_investimento',
  valor_investimento: 'valor_investimento',
  opex_capex: 'opex_capex',
  qtd_dias_uteis: 'qtd_dias_uteis'
});

exports.Prisma.Qsms_inspecao_extintorScalarFieldEnum = makeEnum({
  id_qsms_inspecao_extintor: 'id_qsms_inspecao_extintor',
  data_inspecao: 'data_inspecao',
  tecnico_seguranca: 'tecnico_seguranca',
  status_inspecao: 'status_inspecao'
});

exports.Prisma.Qsms_inspecao_extintor_cadastroScalarFieldEnum = makeEnum({
  id_qsms_inspecao_extintor_cadastro: 'id_qsms_inspecao_extintor_cadastro',
  n_extintor: 'n_extintor',
  localizacao: 'localizacao',
  tipo: 'tipo',
  vencimento_recarga: 'vencimento_recarga'
});

exports.Prisma.Qsms_inspecao_extintor_dadosScalarFieldEnum = makeEnum({
  id_qsms_inspecao_extintor_dados: 'id_qsms_inspecao_extintor_dados',
  id_qsms_inspecao_extintor: 'id_qsms_inspecao_extintor',
  n_extintor: 'n_extintor',
  localizacao: 'localizacao',
  vencimento_recarga: 'vencimento_recarga',
  teste_hidraulico: 'teste_hidraulico',
  observacoes: 'observacoes',
  status_inspecao: 'status_inspecao'
});

exports.Prisma.Qsms_inspecao_extintor_detalhesScalarFieldEnum = makeEnum({
  id_qsms_inspecao_extintor_detalhes: 'id_qsms_inspecao_extintor_detalhes',
  id_qsms_inspecao_extintor_dados: 'id_qsms_inspecao_extintor_dados',
  id_qsms_inspecao_extintor: 'id_qsms_inspecao_extintor',
  item: 'item',
  estado: 'estado',
  responsavel: 'responsavel',
  data_modificacao: 'data_modificacao'
});

exports.Prisma.Qsms_inspecao_extintor_detalhes_cadastroScalarFieldEnum = makeEnum({
  id_qsms_inspecao_extintor_detalhes_cadastro: 'id_qsms_inspecao_extintor_detalhes_cadastro',
  itens: 'itens'
});

exports.Prisma.Remember_me_tokenScalarFieldEnum = makeEnum({
  id: 'id',
  token: 'token',
  user_id: 'user_id',
  created_at: 'created_at'
});

exports.Prisma.Reuniao_acaoScalarFieldEnum = makeEnum({
  id_reuniao_acao: 'id_reuniao_acao',
  id_projetos_principal: 'id_projetos_principal',
  id_reuniao_informacao_geral: 'id_reuniao_informacao_geral',
  id_reuniao_temas: 'id_reuniao_temas',
  acao: 'acao',
  prazo: 'prazo',
  status_acao: 'status_acao',
  responsavel: 'responsavel'
});

exports.Prisma.Reuniao_grupoScalarFieldEnum = makeEnum({
  id_reuniao_grupo: 'id_reuniao_grupo',
  grupo: 'grupo'
});

exports.Prisma.Reuniao_informacao_geralScalarFieldEnum = makeEnum({
  id_reuniao_informacao_geral: 'id_reuniao_informacao_geral',
  id_projetos_principal: 'id_projetos_principal',
  id_modulo: 'id_modulo',
  rev: 'rev',
  local: 'local',
  motivo: 'motivo',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  status_reuniao: 'status_reuniao',
  responsavel_ata: 'responsavel_ata',
  sistema: 'sistema'
});

exports.Prisma.Reuniao_participantesScalarFieldEnum = makeEnum({
  id_reuniao_participantes: 'id_reuniao_participantes',
  id_reuniao_informacao_geral: 'id_reuniao_informacao_geral',
  participante: 'participante',
  cargo: 'cargo',
  email: 'email'
});

exports.Prisma.Reuniao_participantes_grupoScalarFieldEnum = makeEnum({
  id_reuniao_participantes_grupo: 'id_reuniao_participantes_grupo',
  nome: 'nome',
  grupo: 'grupo',
  email: 'email'
});

exports.Prisma.Reuniao_temasScalarFieldEnum = makeEnum({
  id_reuniao_temas: 'id_reuniao_temas',
  id_reuniao_informacao_geral: 'id_reuniao_informacao_geral',
  tema: 'tema',
  departamento: 'departamento',
  assuntos: 'assuntos',
  consideracao: 'consideracao'
});

exports.Prisma.Rh_app_chamadosScalarFieldEnum = makeEnum({
  id_rh_app_chamados: 'id_rh_app_chamados',
  colaborador: 'colaborador',
  data_abertura: 'data_abertura',
  tipo_chamado: 'tipo_chamado',
  descricao_chamado: 'descricao_chamado',
  anexo_chamado: 'anexo_chamado',
  status_chamado: 'status_chamado',
  resposta_chamado: 'resposta_chamado',
  data_atendimento: 'data_atendimento',
  usuario_atendimento: 'usuario_atendimento',
  descricao_atendimento: 'descricao_atendimento',
  data_finalizado: 'data_finalizado',
  usuario_finalizado: 'usuario_finalizado'
});

exports.Prisma.Rh_app_documentosScalarFieldEnum = makeEnum({
  id_rh_app_documentos: 'id_rh_app_documentos',
  colaborador: 'colaborador',
  descricao: 'descricao',
  arquivo: 'arquivo',
  ultima_atualizacao: 'ultima_atualizacao'
});

exports.Prisma.Rh_web_chamados_tipo_cadastroScalarFieldEnum = makeEnum({
  id_rh_web_chamados_tipo_cadastro: 'id_rh_web_chamados_tipo_cadastro',
  tipo_chamado: 'tipo_chamado'
});

exports.Prisma.RoutesScalarFieldEnum = makeEnum({
  id: 'id',
  application_id: 'application_id',
  url: 'url',
  name: 'name',
  desc: 'desc'
});

exports.Prisma.Sc_log_sgiScalarFieldEnum = makeEnum({
  id: 'id',
  inserted_date: 'inserted_date',
  username: 'username',
  application: 'application',
  creator: 'creator',
  ip_user: 'ip_user',
  action: 'action',
  description: 'description'
});

exports.Prisma.Sec_biometriausersScalarFieldEnum = makeEnum({
  login: 'login',
  pswd: 'pswd',
  name: 'name',
  email: 'email',
  active: 'active',
  activation_code: 'activation_code',
  priv_admin: 'priv_admin',
  B_TextFIR: 'B_TextFIR'
});

exports.Prisma.Sec_g5appsScalarFieldEnum = makeEnum({
  app_name: 'app_name',
  app_type: 'app_type',
  description: 'description',
  module: 'module'
});

exports.Prisma.Sec_g5groupsScalarFieldEnum = makeEnum({
  group_id: 'group_id',
  description: 'description'
});

exports.Prisma.Sec_g5groups_appsScalarFieldEnum = makeEnum({
  group_id: 'group_id',
  app_name: 'app_name',
  module: 'module',
  description: 'description',
  priv_access: 'priv_access',
  priv_insert: 'priv_insert',
  priv_delete: 'priv_delete',
  priv_update: 'priv_update',
  priv_export: 'priv_export',
  priv_print: 'priv_print'
});

exports.Prisma.Sec_g5registro_loginScalarFieldEnum = makeEnum({
  id_sec_g5registro_login: 'id_sec_g5registro_login',
  login: 'login',
  nome_usuario: 'nome_usuario',
  aplicacao: 'aplicacao',
  data_hora_login: 'data_hora_login'
});

exports.Prisma.Sec_g5usersScalarFieldEnum = makeEnum({
  login: 'login',
  pswd: 'pswd',
  name: 'name',
  email: 'email',
  active: 'active',
  activation_code: 'activation_code',
  priv_admin: 'priv_admin',
  turno: 'turno',
  id_face: 'id_face',
  funcao: 'funcao',
  imagem: 'imagem',
  data_admissao: 'data_admissao',
  polo: 'polo',
  dashboard: 'dashboard',
  contato: 'contato',
  arquivo: 'arquivo',
  url: 'url',
  matricula: 'matricula',
  assinatura: 'assinatura',
  data_nascimento: 'data_nascimento',
  use_terms: 'use_terms',
  data_confirm_terms: 'data_confirm_terms'
});

exports.Prisma.Sec_g5users_groupsScalarFieldEnum = makeEnum({
  login: 'login',
  group_id: 'group_id'
});

exports.Prisma.Sgi_absenteismo_colaboradorScalarFieldEnum = makeEnum({
  id_sgi_absenteismo_colaborador: 'id_sgi_absenteismo_colaborador',
  codigo: 'codigo',
  nome: 'nome',
  previstas: 'previstas',
  afastamentos: 'afastamentos',
  obrigatorias: 'obrigatorias',
  abono_falta: 'abono_falta',
  trabalhada: 'trabalhada',
  tempo_espera: 'tempo_espera',
  total: 'total',
  diferenca: 'diferenca',
  percentual: 'percentual',
  data_absenteismo: 'data_absenteismo',
  lotacao: 'lotacao',
  cargo: 'cargo'
});

exports.Prisma.Sgi_absenteismo_colaborador_setorScalarFieldEnum = makeEnum({
  data: 'data',
  codigo: 'codigo',
  cargo: 'cargo',
  porcentagem: 'porcentagem',
  lotacao: 'lotacao',
  data_update: 'data_update'
});

exports.Prisma.Sgi_asoScalarFieldEnum = makeEnum({
  id_sgi_aso: 'id_sgi_aso',
  matricula: 'matricula',
  nome: 'nome',
  lotacao: 'lotacao',
  cargo: 'cargo',
  data_aso: 'data_aso',
  data_aso_concluida: 'data_aso_concluida',
  data_vencimento_aso: 'data_vencimento_aso',
  dias_restantes: 'dias_restantes',
  arquivo: 'arquivo',
  status_aso: 'status_aso'
});

exports.Prisma.Sgi_cargoScalarFieldEnum = makeEnum({
  id_sgi_cargo: 'id_sgi_cargo',
  setor: 'setor',
  cargo: 'cargo'
});

exports.Prisma.Sgi_cnhScalarFieldEnum = makeEnum({
  id_sgi_cnh: 'id_sgi_cnh',
  matricula: 'matricula',
  nome: 'nome',
  lotacao: 'lotacao',
  cargo: 'cargo',
  habilitacao_categoria: 'habilitacao_categoria',
  cnh: 'cnh',
  data_ultima_cnh: 'data_ultima_cnh',
  data_cnh_concluida: 'data_cnh_concluida',
  habilitacao_vencimento: 'habilitacao_vencimento',
  dias_restantes: 'dias_restantes',
  status_cnh: 'status_cnh',
  observacao: 'observacao'
});

exports.Prisma.Sgi_colaborador_ordem_servicoScalarFieldEnum = makeEnum({
  id_sgi_colaborador_ordem_servico: 'id_sgi_colaborador_ordem_servico',
  cargo: 'cargo',
  descricao_detalhada: 'descricao_detalhada'
});

exports.Prisma.Sgi_colaborador_ordem_servico_epiScalarFieldEnum = makeEnum({
  id_sgi_colaborador_ordem_servico_epi: 'id_sgi_colaborador_ordem_servico_epi',
  id_sgi_colaborador_ordem_servico: 'id_sgi_colaborador_ordem_servico',
  obrigatorio: 'obrigatorio',
  eventual: 'eventual'
});

exports.Prisma.Sgi_colaborador_ordem_servico_informacao_fixaScalarFieldEnum = makeEnum({
  id_sgi_colaborador_ordem_servico_informacao_fixa: 'id_sgi_colaborador_ordem_servico_informacao_fixa',
  descricao_detalhada_fixa: 'descricao_detalhada_fixa',
  obrigacoes_empregado: 'obrigacoes_empregado',
  medida_preventiva_risco_ambiental: 'medida_preventiva_risco_ambiental',
  regra_de_ouro: 'regra_de_ouro',
  norma_interna: 'norma_interna',
  penalidade: 'penalidade',
  emergencia: 'emergencia',
  instrucoes: 'instrucoes',
  recebimento_compromisso: 'recebimento_compromisso'
});

exports.Prisma.Sgi_colaborador_ordem_servico_risco_avaliacaoScalarFieldEnum = makeEnum({
  id_sgi_colaborador_ordem_servico_risco_avaliacao: 'id_sgi_colaborador_ordem_servico_risco_avaliacao',
  id_sgi_colaborador_ordem_servico: 'id_sgi_colaborador_ordem_servico',
  fisico: 'fisico',
  quimico: 'quimico',
  biologico: 'biologico',
  ergonomico: 'ergonomico',
  acidentes: 'acidentes'
});

exports.Prisma.Sgi_colaboradoresScalarFieldEnum = makeEnum({
  id_sgi_colaboradores: 'id_sgi_colaboradores',
  codigo: 'codigo',
  arquivo: 'arquivo',
  url: 'url',
  nome: 'nome',
  cargo: 'cargo',
  lotacao: 'lotacao',
  celular: 'celular',
  data_admissao: 'data_admissao',
  equipamento_autorizado: 'equipamento_autorizado',
  tipo_cnh: 'tipo_cnh'
});

exports.Prisma.Sgi_colaboradores_cargo_cadastroScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_cargo_cadastro: 'id_sgi_colaboradores_cargo_cadastro',
  cargo: 'cargo'
});

exports.Prisma.Sgi_colaboradores_cursoScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso: 'id_sgi_colaboradores_curso',
  matricula: 'matricula',
  colaborador: 'colaborador',
  turno: 'turno',
  cargo: 'cargo',
  ref_curso: 'ref_curso',
  id_sgi_curso: 'id_sgi_curso',
  curso: 'curso',
  tipo_curso: 'tipo_curso',
  data_inclusao: 'data_inclusao',
  data_realizacao: 'data_realizacao',
  data_prazo_realizacao: 'data_prazo_realizacao',
  data_reciclagem: 'data_reciclagem',
  status_curso: 'status_curso',
  observacao: 'observacao',
  unidade: 'unidade',
  contato: 'contato'
});

exports.Prisma.Sgi_colaboradores_curso_lista_presencaScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_lista_presenca: 'id_sgi_colaboradores_curso_lista_presenca',
  ref_curso: 'ref_curso',
  documento: 'documento',
  nome_documento: 'nome_documento'
});

exports.Prisma.Sgi_colaboradores_curso_lista_presenca_colaboradoresScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_lista_presenca_colaboradores: 'id_sgi_colaboradores_curso_lista_presenca_colaboradores',
  id_sgi_colaboradores_curso_lista_presenca_principal: 'id_sgi_colaboradores_curso_lista_presenca_principal',
  id_sgi_cursos: 'id_sgi_cursos',
  ref_curso: 'ref_curso',
  colaboradores: 'colaboradores'
});

exports.Prisma.Sgi_colaboradores_curso_lista_presenca_principalScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_lista_presenca_principal: 'id_sgi_colaboradores_curso_lista_presenca_principal',
  data_hora_lista_presenca_inicio: 'data_hora_lista_presenca_inicio',
  data_hora_lista_presenca_fim: 'data_hora_lista_presenca_fim',
  id_sgi_cursos: 'id_sgi_cursos',
  ref_curso: 'ref_curso',
  instrutor: 'instrutor',
  local_treinamento: 'local_treinamento',
  prazo_verificacao: 'prazo_verificacao',
  eficacia_curso: 'eficacia_curso',
  evidencias_curso: 'evidencias_curso',
  nota_curso: 'nota_curso',
  prazo_realizacao: 'prazo_realizacao'
});

exports.Prisma.Sgi_colaboradores_curso_questionarioScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_questionario: 'id_sgi_colaboradores_curso_questionario',
  colaborador: 'colaborador',
  data_realizacao: 'data_realizacao',
  ref_curso: 'ref_curso',
  id_sgi_curso: 'id_sgi_curso',
  curso: 'curso',
  item: 'item',
  resposta: 'resposta',
  resposta_correta: 'resposta_correta'
});

exports.Prisma.Sgi_colaboradores_curso_questionario_alternativasScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_questionario_alternativas: 'id_sgi_colaboradores_curso_questionario_alternativas',
  id_sgi_colaboradores_curso_questionario_cadastro: 'id_sgi_colaboradores_curso_questionario_cadastro',
  id_sgi_curso: 'id_sgi_curso',
  alternativa: 'alternativa',
  descricao: 'descricao'
});

exports.Prisma.Sgi_colaboradores_curso_questionario_auto_avaliacaoScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_questionario_auto_avaliacao: 'id_sgi_colaboradores_curso_questionario_auto_avaliacao',
  colaborador: 'colaborador',
  data_realizacao: 'data_realizacao',
  ref_curso: 'ref_curso',
  curso: 'curso',
  perguntas: 'perguntas',
  avaliacao: 'avaliacao'
});

exports.Prisma.Sgi_colaboradores_curso_questionario_auto_avaliacao_cadastroScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_questionario_auto_avaliacao_cadastro: 'id_sgi_colaboradores_curso_questionario_auto_avaliacao_cadastro',
  perguntas: 'perguntas'
});

exports.Prisma.Sgi_colaboradores_curso_questionario_cadastroScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_questionario_cadastro: 'id_sgi_colaboradores_curso_questionario_cadastro',
  id_sgi_cursos: 'id_sgi_cursos',
  curso: 'curso',
  item: 'item',
  resposta_correta: 'resposta_correta'
});

exports.Prisma.Sgi_colaboradores_curso_videoScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_curso_video: 'id_sgi_colaboradores_curso_video',
  id_sgi_curso: 'id_sgi_curso',
  curso: 'curso',
  link_video: 'link_video'
});

exports.Prisma.Sgi_colaboradores_tela_cursosScalarFieldEnum = makeEnum({
  id_sgi_colaboradores_tela_cursos: 'id_sgi_colaboradores_tela_cursos',
  abas: 'abas'
});

exports.Prisma.Sgi_controle_cargosScalarFieldEnum = makeEnum({
  id_sgi_controle_cargos: 'id_sgi_controle_cargos',
  matricula: 'matricula',
  nome_colaborador: 'nome_colaborador',
  cargo_colaborador: 'cargo_colaborador',
  id_sgi_colaboradores: 'id_sgi_colaboradores',
  data_inicio_cargo: 'data_inicio_cargo',
  data_fim_cargo: 'data_fim_cargo',
  obervacao: 'obervacao'
});

exports.Prisma.Sgi_cronotacografoScalarFieldEnum = makeEnum({
  id_sgi_cronotacografo: 'id_sgi_cronotacografo',
  placa: 'placa',
  data_revisao_concluida: 'data_revisao_concluida',
  status_cronotacografo: 'status_cronotacografo',
  data_ultima_revisao: 'data_ultima_revisao',
  data_proxima_revisao: 'data_proxima_revisao',
  dias_restantes: 'dias_restantes',
  documentos: 'documentos',
  documentos_nome: 'documentos_nome',
  responsavel: 'responsavel',
  cronotacografo: 'cronotacografo',
  data_atualizacao: 'data_atualizacao'
});

exports.Prisma.Sgi_curso_atocontratacaoScalarFieldEnum = makeEnum({
  id_sgi_curso_atocontratacao: 'id_sgi_curso_atocontratacao',
  curso: 'curso',
  data_realizacao: 'data_realizacao',
  validade_certificado: 'validade_certificado',
  carga_horaria: 'carga_horaria',
  periodicidade: 'periodicidade',
  publico__alvo: 'publico__alvo',
  disponibilidade: 'disponibilidade'
});

exports.Prisma.Sgi_curso_atocontratacao_cargoScalarFieldEnum = makeEnum({
  id_sgi_curso_atocontratacao_cargo: 'id_sgi_curso_atocontratacao_cargo',
  id_sgi_cargo: 'id_sgi_cargo',
  id_sgi_curso_atocontratacao: 'id_sgi_curso_atocontratacao',
  setor: 'setor',
  cargo: 'cargo',
  curso: 'curso',
  observacao: 'observacao'
});

exports.Prisma.Sgi_curso_meioambienteScalarFieldEnum = makeEnum({
  id_sgi_curso_meioambiente: 'id_sgi_curso_meioambiente',
  curso: 'curso',
  data_realizacao: 'data_realizacao',
  carga_horaria: 'carga_horaria',
  periodicidade: 'periodicidade',
  publico_alvo: 'publico_alvo',
  disponibilidade: 'disponibilidade'
});

exports.Prisma.Sgi_curso_meioambiente_cargoScalarFieldEnum = makeEnum({
  id_sgi_curso_meioambiente_cargo: 'id_sgi_curso_meioambiente_cargo',
  id_sgi_curso_meioambiente: 'id_sgi_curso_meioambiente',
  id_sgi_cargo: 'id_sgi_cargo',
  setor: 'setor',
  cargo: 'cargo',
  curso: 'curso',
  observacao: 'observacao'
});

exports.Prisma.Sgi_curso_qualidadeScalarFieldEnum = makeEnum({
  id_sgi_curso_qualidade: 'id_sgi_curso_qualidade',
  curso: 'curso',
  data_realizacao: 'data_realizacao',
  validade_certificado: 'validade_certificado',
  carga_horaria: 'carga_horaria',
  periodicidade: 'periodicidade',
  publico_alvo: 'publico_alvo',
  disponibilidade: 'disponibilidade'
});

exports.Prisma.Sgi_curso_qualidade_cargoScalarFieldEnum = makeEnum({
  id_sgi_curso_qualidade_cargo: 'id_sgi_curso_qualidade_cargo',
  id_sgi_cargo: 'id_sgi_cargo',
  id_sgi_curso_qualidade: 'id_sgi_curso_qualidade',
  setor: 'setor',
  cargo: 'cargo',
  curso: 'curso',
  observacao: 'observacao'
});

exports.Prisma.Sgi_curso_ssoScalarFieldEnum = makeEnum({
  id_sgi_curso_sso: 'id_sgi_curso_sso',
  curso: 'curso',
  data_realizacao: 'data_realizacao',
  carga_horaria: 'carga_horaria',
  carga_horaria_reciclagem: 'carga_horaria_reciclagem',
  periodicidade: 'periodicidade',
  publico_alvo: 'publico_alvo',
  disponibilidade: 'disponibilidade'
});

exports.Prisma.Sgi_curso_sso_cargoScalarFieldEnum = makeEnum({
  id_sgi_curso_sso_cargo: 'id_sgi_curso_sso_cargo',
  id_sgi_cargo: 'id_sgi_cargo',
  id_sgi_curso_sso: 'id_sgi_curso_sso',
  setor: 'setor',
  cargo: 'cargo',
  curso: 'curso',
  observacao: 'observacao',
  status_curso: 'status_curso'
});

exports.Prisma.Sgi_cursosScalarFieldEnum = makeEnum({
  id_sgi_cursos: 'id_sgi_cursos',
  matriz: 'matriz',
  curso: 'curso',
  carga_horaria: 'carga_horaria',
  periodicidade_dias: 'periodicidade_dias',
  responsavel_curso: 'responsavel_curso',
  tipo_curso: 'tipo_curso',
  questionario: 'questionario'
});

exports.Prisma.Sgi_cursos_conteudoScalarFieldEnum = makeEnum({
  id_sgi_cursos_conteudo: 'id_sgi_cursos_conteudo',
  id_sgi_cursos: 'id_sgi_cursos',
  conteudo: 'conteudo'
});

exports.Prisma.Sgi_destinatario_compraScalarFieldEnum = makeEnum({
  id_sgi_destinatario_compra: 'id_sgi_destinatario_compra',
  local_aplicacao: 'local_aplicacao',
  rua: 'rua',
  cep_entrega: 'cep_entrega',
  cidade: 'cidade',
  fone: 'fone',
  email: 'email',
  cnpj: 'cnpj',
  ie: 'ie'
});

exports.Prisma.Sgi_documentacao_colaboradoresScalarFieldEnum = makeEnum({
  id_sgi_documentacao_colaboradores: 'id_sgi_documentacao_colaboradores',
  id_sgi_colaboradores: 'id_sgi_colaboradores',
  matricula: 'matricula',
  arquivo: 'arquivo',
  nome_arquivo: 'nome_arquivo',
  tipo_arquivo: 'tipo_arquivo',
  data_atualizacao: 'data_atualizacao',
  criado_por: 'criado_por',
  vencimento: 'vencimento',
  observacao: 'observacao',
  categoria: 'categoria'
});

exports.Prisma.Sgi_documentacao_colaboradores_tipo_documentoScalarFieldEnum = makeEnum({
  id_sgi_documentacao_colaboradores_tipo_documento: 'id_sgi_documentacao_colaboradores_tipo_documento',
  tipo_documento: 'tipo_documento'
});

exports.Prisma.Sgi_epiScalarFieldEnum = makeEnum({
  id_sgi_epi: 'id_sgi_epi',
  id_sgi_colaboradores: 'id_sgi_colaboradores',
  data_hora: 'data_hora',
  nome_arquivo: 'nome_arquivo',
  arquivo: 'arquivo'
});

exports.Prisma.Sgi_estoque_detalhe_produtoScalarFieldEnum = makeEnum({
  id_sgi_estoque_detalhe_produto: 'id_sgi_estoque_detalhe_produto',
  cod_produto: 'cod_produto',
  qtd_produto: 'qtd_produto',
  valor_unitario: 'valor_unitario',
  fornecedor: 'fornecedor',
  nf: 'nf',
  ultima_entrada: 'ultima_entrada',
  ultima_saida: 'ultima_saida',
  observacao_produto: 'observacao_produto',
  num_ordem_compra: 'num_ordem_compra',
  nota_fiscal_compra: 'nota_fiscal_compra',
  status_produto: 'status_produto',
  valor_final: 'valor_final',
  num_solic_compra_itens: 'num_solic_compra_itens',
  num_solicitacao_compra: 'num_solicitacao_compra'
});

exports.Prisma.Sgi_estoque_detalhe_produto2ScalarFieldEnum = makeEnum({
  id_sgi_estoque_detalhe_produto: 'id_sgi_estoque_detalhe_produto',
  cod_produto: 'cod_produto',
  qtd_produto: 'qtd_produto',
  valor_unitario: 'valor_unitario',
  fornecedor: 'fornecedor',
  nf: 'nf',
  ultima_entrada: 'ultima_entrada',
  ultima_saida: 'ultima_saida',
  observacao_produto: 'observacao_produto',
  num_ordem_compra: 'num_ordem_compra',
  nota_fiscal_compra: 'nota_fiscal_compra',
  status_produto: 'status_produto',
  valor_final: 'valor_final',
  num_solic_compra_itens: 'num_solic_compra_itens',
  num_solicitacao_compra: 'num_solicitacao_compra'
});

exports.Prisma.Sgi_estoque_detalhe_produto_originalScalarFieldEnum = makeEnum({
  id_sgi_estoque_detalhe_produto: 'id_sgi_estoque_detalhe_produto',
  cod_produto: 'cod_produto',
  qtd_produto: 'qtd_produto',
  valor_unitario: 'valor_unitario',
  fornecedor: 'fornecedor',
  nf: 'nf',
  ultima_entrada: 'ultima_entrada',
  ultima_saida: 'ultima_saida',
  observacao_produto: 'observacao_produto',
  num_ordem_compra: 'num_ordem_compra',
  nota_fiscal_compra: 'nota_fiscal_compra',
  status_produto: 'status_produto',
  valor_final: 'valor_final',
  num_solic_compra_itens: 'num_solic_compra_itens',
  num_solicitacao_compra: 'num_solicitacao_compra'
});

exports.Prisma.Sgi_estoque_produtoScalarFieldEnum = makeEnum({
  id_sgi_estoque_produto: 'id_sgi_estoque_produto',
  setor: 'setor',
  cod_produto: 'cod_produto',
  nome_produto: 'nome_produto',
  cadastrado_por: 'cadastrado_por',
  data_hora_cadastro: 'data_hora_cadastro'
});

exports.Prisma.Sgi_estoque_produto_copy_backupScalarFieldEnum = makeEnum({
  id_sgi_estoque_produto: 'id_sgi_estoque_produto',
  setor: 'setor',
  cod_produto: 'cod_produto',
  nome_produto: 'nome_produto',
  cadastrado_por: 'cadastrado_por',
  data_hora_cadastro: 'data_hora_cadastro'
});

exports.Prisma.Sgi_faltasScalarFieldEnum = makeEnum({
  id_sgi_falta: 'id_sgi_falta',
  matricula: 'matricula',
  colaborador: 'colaborador',
  unidade: 'unidade',
  data_ocorrencia: 'data_ocorrencia',
  superior_imediato: 'superior_imediato',
  ocorrencia: 'ocorrencia',
  motivo: 'motivo',
  arquivo: 'arquivo',
  nome_arquivo: 'nome_arquivo',
  apreciacao_superior: 'apreciacao_superior',
  observacao: 'observacao',
  assinatura: 'assinatura',
  data_assinatura: 'data_assinatura',
  usuario: 'usuario',
  dias_falta: 'dias_falta'
});

exports.Prisma.Sgi_faltas_apreciacao_cadastroScalarFieldEnum = makeEnum({
  id_sgi_faltas_apreciacao_cadastro: 'id_sgi_faltas_apreciacao_cadastro',
  apreciacao: 'apreciacao'
});

exports.Prisma.Sgi_faltas_motivos_cadastroScalarFieldEnum = makeEnum({
  id_sgi_faltas_motivos_cadastro: 'id_sgi_faltas_motivos_cadastro',
  motivo: 'motivo'
});

exports.Prisma.Sgi_faltas_superior_cadastroScalarFieldEnum = makeEnum({
  id_sgi_faltas_superior_cadastro: 'id_sgi_faltas_superior_cadastro',
  superior: 'superior',
  contato: 'contato'
});

exports.Prisma.Sgi_folha_pagamentoScalarFieldEnum = makeEnum({
  id_sgi_folha_pagamento: 'id_sgi_folha_pagamento',
  mes: 'mes',
  descricao: 'descricao',
  unidade: 'unidade',
  nmr_funcionarios: 'nmr_funcionarios',
  tipo: 'tipo',
  valor: 'valor',
  observacao: 'observacao'
});

exports.Prisma.Sgi_folha_pagamento_tipoScalarFieldEnum = makeEnum({
  id_sgi_folha_pagamento_tipo: 'id_sgi_folha_pagamento_tipo',
  descricao: 'descricao',
  tipo: 'tipo'
});

exports.Prisma.Sgi_fornecedorScalarFieldEnum = makeEnum({
  id_sgi_fornecedor: 'id_sgi_fornecedor',
  fornecedor: 'fornecedor',
  cnpj: 'cnpj',
  endereco: 'endereco',
  cep: 'cep',
  condicoes_pagamento: 'condicoes_pagamento',
  prazo_pagamento: 'prazo_pagamento',
  unidade: 'unidade'
});

exports.Prisma.Sgi_frota_cadastroScalarFieldEnum = makeEnum({
  id_sgi_frota_cadastro: 'id_sgi_frota_cadastro',
  frota: 'frota',
  placa: 'placa',
  fabricante_modelo: 'fabricante_modelo',
  ano_fabricacao: 'ano_fabricacao',
  ano_modelo: 'ano_modelo',
  chassi: 'chassi',
  renavam: 'renavam'
});

exports.Prisma.Sgi_frota_carretas_documentosScalarFieldEnum = makeEnum({
  id_sgi_frota_documentos: 'id_sgi_frota_documentos',
  placa: 'placa',
  operacao: 'operacao',
  renavam: 'renavam',
  chassi: 'chassi',
  tipo: 'tipo',
  marca: 'marca',
  modelo: 'modelo',
  cor: 'cor',
  ano: 'ano',
  vencimento: 'vencimento',
  documento: 'documento',
  nome_documento: 'nome_documento'
});

exports.Prisma.Sgi_frota_cavalo_documentosScalarFieldEnum = makeEnum({
  id_sgi_frota_cavalo_documentos: 'id_sgi_frota_cavalo_documentos',
  placa: 'placa',
  propriedade: 'propriedade',
  uf: 'uf',
  renavam: 'renavam',
  chassi: 'chassi',
  tipo: 'tipo',
  marca: 'marca',
  modelo: 'modelo',
  cor: 'cor',
  ano: 'ano',
  vencimento: 'vencimento',
  documento: 'documento',
  nome_documento: 'nome_documento'
});

exports.Prisma.Sgi_incidentes_rai_catScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_cat: 'id_sgi_incidentes_rai_cat',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  envolvido: 'envolvido',
  emissao_cat: 'emissao_cat',
  apresentacao_cat: 'apresentacao_cat',
  cat_descricao: 'cat_descricao',
  evidencias_reuniao: 'evidencias_reuniao'
});

exports.Prisma.Sgi_incidentes_rai_conclusaoScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_conclusao: 'id_sgi_incidentes_rai_conclusao',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  causa: 'causa',
  medida_proposta: 'medida_proposta',
  responsavel: 'responsavel',
  empresa: 'empresa',
  prazo: 'prazo',
  status_prazo: 'status_prazo'
});

exports.Prisma.Sgi_incidentes_rai_depoimentoScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_depoimento: 'id_sgi_incidentes_rai_depoimento',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  envolvido: 'envolvido',
  depoimento: 'depoimento',
  severidade: 'severidade',
  severidade_descricao: 'severidade_descricao',
  tipo_incidente_pessoal: 'tipo_incidente_pessoal',
  tipo_incidente_impessoal: 'tipo_incidente_impessoal',
  tipo_incidente_descricao: 'tipo_incidente_descricao',
  consequencia_evento: 'consequencia_evento',
  servico_executado_momento_acidente: 'servico_executado_momento_acidente',
  linha_do_tempo: 'linha_do_tempo'
});

exports.Prisma.Sgi_incidentes_rai_fator_de_risco_cadastroScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_fator_de_risco_cadastro: 'id_sgi_incidentes_rai_fator_de_risco_cadastro',
  fator_de_risco: 'fator_de_risco',
  tipo_fator_de_risco: 'tipo_fator_de_risco'
});

exports.Prisma.Sgi_incidentes_rai_levantamento_causasScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_levantamento_causas: 'id_sgi_incidentes_rai_levantamento_causas',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  registro_fotografico: 'registro_fotografico',
  itens: 'itens',
  especificar: 'especificar',
  nao_conformidade: 'nao_conformidade',
  fator_de_risco: 'fator_de_risco'
});

exports.Prisma.Sgi_incidentes_rai_levantamento_causas_cadastroScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_levantamento_causas_cadastro: 'id_sgi_incidentes_rai_levantamento_causas_cadastro',
  causa: 'causa'
});

exports.Prisma.Sgi_incidentes_rai_lista_prescencaScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_lista_prescenca: 'id_sgi_incidentes_rai_lista_prescenca',
  sgi_incidentes_repi_principal: 'sgi_incidentes_repi_principal',
  area: 'area',
  nome: 'nome',
  empresa: 'empresa',
  cargo: 'cargo',
  assinatura: 'assinatura'
});

exports.Prisma.Sgi_incidentes_rai_lista_prescenca_principalScalarFieldEnum = makeEnum({
  sgi_incidentes_rai_lista_prescenca_principal: 'sgi_incidentes_rai_lista_prescenca_principal',
  sgi_incidentes_repi_principal: 'sgi_incidentes_repi_principal',
  local: 'local',
  data_hora: 'data_hora'
});

exports.Prisma.Sgi_incidentes_rai_principalScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_principal: 'id_sgi_incidentes_rai_principal',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  comunicacao_incidente: 'comunicacao_incidente',
  comunicacao_incidente_descricao: 'comunicacao_incidente_descricao',
  conclusao: 'conclusao'
});

exports.Prisma.Sgi_incidentes_rai_procedimentosScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_procedimentos: 'id_sgi_incidentes_rai_procedimentos',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  procedimento: 'procedimento',
  procedimento_opcao: 'procedimento_opcao',
  procedimento_descricao: 'procedimento_descricao'
});

exports.Prisma.Sgi_incidentes_rai_procedimentos_cadastroScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_procedimentos_cadastro: 'id_sgi_incidentes_rai_procedimentos_cadastro',
  procedimento: 'procedimento'
});

exports.Prisma.Sgi_incidentes_rai_tipo_incidente_cadastroScalarFieldEnum = makeEnum({
  id_sgi_incidentes_rai_tipo_incidente_cadastro: 'id_sgi_incidentes_rai_tipo_incidente_cadastro',
  tipo_incidente: 'tipo_incidente',
  incidente: 'incidente'
});

exports.Prisma.Sgi_incidentes_repi_acaoScalarFieldEnum = makeEnum({
  id_sgi_incidentes_repi_acao: 'id_sgi_incidentes_repi_acao',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  acao: 'acao',
  executante: 'executante',
  empresa: 'empresa',
  elaborador_por: 'elaborador_por',
  cargo: 'cargo',
  contato: 'contato'
});

exports.Prisma.Sgi_incidentes_repi_envolvidosScalarFieldEnum = makeEnum({
  id_sgi_incidentes_repi_envolvidos: 'id_sgi_incidentes_repi_envolvidos',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  nome: 'nome',
  idade: 'idade',
  nivel_instrucao: 'nivel_instrucao',
  cargo: 'cargo',
  empresa: 'empresa',
  tempo_cargo: 'tempo_cargo',
  tempo_empresa: 'tempo_empresa',
  descricao_incidente_individual: 'descricao_incidente_individual',
  parte_atingida: 'parte_atingida',
  identificacao: 'identificacao',
  servico_medico: 'servico_medico',
  hora_servico_medico: 'hora_servico_medico'
});

exports.Prisma.Sgi_incidentes_repi_fotoScalarFieldEnum = makeEnum({
  id_sgi_incidentes_repi_foto: 'id_sgi_incidentes_repi_foto',
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  registro_fotografico: 'registro_fotografico'
});

exports.Prisma.Sgi_incidentes_repi_principalScalarFieldEnum = makeEnum({
  id_sgi_incidentes_repi_principal: 'id_sgi_incidentes_repi_principal',
  data_hora_incidente: 'data_hora_incidente',
  hora_trabalhada: 'hora_trabalhada',
  tipo_atividade: 'tipo_atividade',
  local_incidente: 'local_incidente',
  classificacao_incidente: 'classificacao_incidente',
  empresa_envolvida: 'empresa_envolvida',
  empresa_responsavel: 'empresa_responsavel',
  descricao_incidente_geral: 'descricao_incidente_geral'
});

exports.Prisma.Sgi_inspecao_detalheScalarFieldEnum = makeEnum({
  id_sgi_inspecao_detalhe: 'id_sgi_inspecao_detalhe',
  id_sgi_inspecao_principal: 'id_sgi_inspecao_principal',
  condicao: 'condicao',
  descricao: 'descricao',
  correcao: 'correcao',
  prazo: 'prazo',
  responsavel: 'responsavel',
  situacao: 'situacao',
  observacao_situacao: 'observacao_situacao'
});

exports.Prisma.Sgi_inspecao_participantesScalarFieldEnum = makeEnum({
  id_sgi_inspecao_participantes: 'id_sgi_inspecao_participantes',
  id_sgi_inspecao_principal: 'id_sgi_inspecao_principal',
  participantes: 'participantes'
});

exports.Prisma.Sgi_inspecao_principalScalarFieldEnum = makeEnum({
  id_sgi_inspecao_principal: 'id_sgi_inspecao_principal',
  responsavel_inspecao: 'responsavel_inspecao',
  data_inspecao: 'data_inspecao',
  local: 'local',
  item: 'item',
  tipo_inspecao: 'tipo_inspecao',
  status_inspecao: 'status_inspecao'
});

exports.Prisma.Sgi_inventario_estoqueScalarFieldEnum = makeEnum({
  id_sgi_inventario_estoque: 'id_sgi_inventario_estoque',
  data_inventario: 'data_inventario',
  nome_produto: 'nome_produto',
  cod_produto: 'cod_produto',
  setor: 'setor',
  unidade: 'unidade',
  quantidade: 'quantidade',
  quantidade_inventario: 'quantidade_inventario',
  diferenca: 'diferenca',
  realizado_por: 'realizado_por',
  status_inventario: 'status_inventario',
  valor: 'valor',
  assinatura: 'assinatura',
  obs: 'obs'
});

exports.Prisma.Sgi_opacimetroScalarFieldEnum = makeEnum({
  id_sgi_opacimetro: 'id_sgi_opacimetro',
  placa: 'placa',
  data_revisao_concluida: 'data_revisao_concluida',
  status_opacimetro: 'status_opacimetro',
  data_ultima_revisao: 'data_ultima_revisao',
  data_proxima_revisao: 'data_proxima_revisao',
  dias_restantes: 'dias_restantes',
  documentos: 'documentos',
  documentos_nome: 'documentos_nome',
  responsavel: 'responsavel',
  opacimetro: 'opacimetro',
  data_atualizacao: 'data_atualizacao'
});

exports.Prisma.Sgi_opacimetro_empilhadeiraScalarFieldEnum = makeEnum({
  id_sgi_opacimetro_empilhadeira: 'id_sgi_opacimetro_empilhadeira',
  placa: 'placa',
  data_revisao_concluida: 'data_revisao_concluida',
  status_opacimetro: 'status_opacimetro',
  data_ultima_revisao: 'data_ultima_revisao',
  data_proxima_revisao: 'data_proxima_revisao',
  dias_restantes: 'dias_restantes',
  documentos: 'documentos',
  documentos_nome: 'documentos_nome',
  responsavel: 'responsavel',
  opacimetro: 'opacimetro'
});

exports.Prisma.Sgi_ordem_compraScalarFieldEnum = makeEnum({
  id_sgi_ordem_compra: 'id_sgi_ordem_compra',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  data_previsao_entrega: 'data_previsao_entrega',
  data_hora_aprovacao: 'data_hora_aprovacao',
  data_ordem_compra: 'data_ordem_compra',
  data_compra: 'data_compra',
  data_recebimento: 'data_recebimento',
  data_retirada: 'data_retirada',
  data_previsao_pagamento: 'data_previsao_pagamento',
  local_aplicacao: 'local_aplicacao',
  num_nota_fiscal: 'num_nota_fiscal',
  rua: 'rua',
  cep_entrega: 'cep_entrega',
  cidade: 'cidade',
  fone: 'fone',
  email: 'email',
  email_nf: 'email_nf',
  cnpj: 'cnpj',
  ie: 'ie',
  fornecedor: 'fornecedor',
  endereco: 'endereco',
  cep: 'cep',
  status_ordem_compra: 'status_ordem_compra',
  observacao: 'observacao',
  prazo_pagamento: 'prazo_pagamento',
  setor: 'setor',
  valor: 'valor',
  valor_setor: 'valor_setor',
  valor_setor_utilizado: 'valor_setor_utilizado',
  valor_setor_saldo: 'valor_setor_saldo',
  valor_setor_final: 'valor_setor_final',
  usuario_recebedor: 'usuario_recebedor',
  assinatura_recebedor: 'assinatura_recebedor',
  responsavel_aprovacao: 'responsavel_aprovacao',
  usuario_responsavel: 'usuario_responsavel',
  nota_fiscal: 'nota_fiscal',
  responsavel_inspecao: 'responsavel_inspecao',
  entrega_conforme: 'entrega_conforme',
  obs_entrega: 'obs_entrega',
  nota_fiscal_nome_arquivo: 'nota_fiscal_nome_arquivo',
  data_hora_cancelamento: 'data_hora_cancelamento',
  responsavel_cancelamento: 'responsavel_cancelamento',
  motivo_cancelamento: 'motivo_cancelamento'
});

exports.Prisma.Sgi_ordem_compra_data_pagamentoScalarFieldEnum = makeEnum({
  id_sgi_ordem_compra_data_pagamento: 'id_sgi_ordem_compra_data_pagamento',
  id_sgi_ordem_compra: 'id_sgi_ordem_compra',
  data_previsao_pagamento: 'data_previsao_pagamento',
  valor: 'valor',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  id_ordem_servico: 'id_ordem_servico',
  data_parcelado_autorizado: 'data_parcelado_autorizado',
  n_parcela: 'n_parcela',
  n_total_parcelas: 'n_total_parcelas'
});

exports.Prisma.Sgi_ordem_compra_data_pagamento_copyScalarFieldEnum = makeEnum({
  id_sgi_ordem_compra_data_pagamento: 'id_sgi_ordem_compra_data_pagamento',
  id_sgi_ordem_compra: 'id_sgi_ordem_compra',
  data_previsao_pagamento: 'data_previsao_pagamento',
  valor: 'valor',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  id_ordem_servico: 'id_ordem_servico'
});

exports.Prisma.Sgi_ordem_compra_itensScalarFieldEnum = makeEnum({
  id_sgi_ordem_compra_itens: 'id_sgi_ordem_compra_itens',
  id_sgi_ordem_compra: 'id_sgi_ordem_compra',
  id_sgi_solicitacao_compra_itens: 'id_sgi_solicitacao_compra_itens',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  quantidade: 'quantidade',
  saldo_entrega: 'saldo_entrega',
  descricao: 'descricao',
  especificacao_adicional: 'especificacao_adicional',
  valor_unitario: 'valor_unitario',
  total: 'total',
  entrega: 'entrega',
  saldo: 'saldo',
  visualizar: 'visualizar'
});

exports.Prisma.Sgi_ordem_compra_nota_fiscalScalarFieldEnum = makeEnum({
  id_sgi_ordem_compra_nota_fiscal: 'id_sgi_ordem_compra_nota_fiscal',
  id_sgi_ordem_compra: 'id_sgi_ordem_compra',
  nome_nota_fiscal: 'nome_nota_fiscal',
  arquivo_nota_fiscal: 'arquivo_nota_fiscal'
});

exports.Prisma.Sgi_ordem_saidaScalarFieldEnum = makeEnum({
  id_sgi_ordem_saida: 'id_sgi_ordem_saida',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  usuario_recebedor: 'usuario_recebedor',
  assinatura_recebedor: 'assinatura_recebedor',
  data_recebimento: 'data_recebimento',
  responsavel_inspecao: 'responsavel_inspecao',
  data_inspecao: 'data_inspecao',
  status_ordem_saida: 'status_ordem_saida',
  descricao_item: 'descricao_item',
  qtd_itens: 'qtd_itens'
});

exports.Prisma.Sgi_ordem_servicosScalarFieldEnum = makeEnum({
  id_sgi_ordem_servico: 'id_sgi_ordem_servico',
  status_ordem_servicos: 'status_ordem_servicos',
  placa_veiculo: 'placa_veiculo',
  tipo_manutencao: 'tipo_manutencao',
  falhaocorrida: 'falhaocorrida',
  local_manutencao: 'local_manutencao',
  gestor_manutencao: 'gestor_manutencao',
  mecanico_responsavel: 'mecanico_responsavel',
  motorista_operador: 'motorista_operador',
  horimetro: 'horimetro',
  data_hora_abertura: 'data_hora_abertura',
  data_hora_fechamento: 'data_hora_fechamento',
  tempo_em_manutencao: 'tempo_em_manutencao',
  analise_inicial: 'analise_inicial',
  descricao_manutencao: 'descricao_manutencao',
  necessario_peca: 'necessario_peca',
  descricao_pecas: 'descricao_pecas',
  responsavel_abertura_os: 'responsavel_abertura_os',
  data_hora_inserido: 'data_hora_inserido',
  unidade: 'unidade',
  id_solicitacao_compra: 'id_solicitacao_compra'
});

exports.Prisma.Sgi_ordem_servicos_cadastro_empilhadeirasScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_cadastro_empilhadeiras: 'id_sgi_ordem_servicos_cadastro_empilhadeiras',
  empilhadeira: 'empilhadeira',
  novo_tag: 'novo_tag',
  tipo_emp: 'tipo_emp',
  marca: 'marca',
  modelo: 'modelo',
  ano: 'ano',
  serie: 'serie',
  galpao_secao: 'galpao_secao',
  informacoes: 'informacoes',
  unidade: 'unidade',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Sgi_ordem_servicos_cadastro_frotaScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_cadastro_frota: 'id_sgi_ordem_servicos_cadastro_frota',
  placa: 'placa',
  campoA: 'campoA',
  chassi: 'chassi',
  marca: 'marca',
  ano: 'ano',
  campoB: 'campoB',
  tipo_frota: 'tipo_frota',
  unidade: 'unidade',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Sgi_ordem_servicos_disponibilidadeScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_disponibilidade: 'id_sgi_ordem_servicos_disponibilidade',
  id_sgi_ordem_servicos: 'id_sgi_ordem_servicos',
  placa: 'placa',
  abertura: 'abertura',
  fechamento: 'fechamento',
  disponibilidade: 'disponibilidade',
  indisponibilidade: 'indisponibilidade'
});

exports.Prisma.Sgi_ordem_servicos_falha_ocorridaScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_falha_ocorrida: 'id_sgi_ordem_servicos_falha_ocorrida',
  falha_ocorrida: 'falha_ocorrida',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_gestor_manutencaoScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_gestor_manutencao: 'id_sgi_ordem_servicos_gestor_manutencao',
  gestor_manutencao: 'gestor_manutencao',
  email: 'email',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_local_manutencaoScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_local_manutencao: 'id_sgi_ordem_servicos_local_manutencao',
  local_manutencao: 'local_manutencao',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_mecanicosScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_mecanicos: 'id_sgi_ordem_servicos_mecanicos',
  mecanico: 'mecanico',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_motorista_operadorScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_motorista_operador: 'id_sgi_ordem_servicos_motorista_operador',
  motorista_operador: 'motorista_operador',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_oficinasScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_oficinas: 'id_sgi_ordem_servicos_oficinas',
  local_manutencao: 'local_manutencao',
  unidade: 'unidade'
});

exports.Prisma.Sgi_ordem_servicos_placasScalarFieldEnum = makeEnum({
  id_sgi_ordem_servicos_placas: 'id_sgi_ordem_servicos_placas',
  placa_equipamento: 'placa_equipamento',
  tipo: 'tipo',
  unidade: 'unidade'
});

exports.Prisma.Sgi_osScalarFieldEnum = makeEnum({
  id_sgi_os: 'id_sgi_os',
  id_sgi_colaboradores: 'id_sgi_colaboradores',
  data_hora: 'data_hora',
  nome_arquivo: 'nome_arquivo',
  arquivo: 'arquivo'
});

exports.Prisma.Sgi_pc_emailScalarFieldEnum = makeEnum({
  id_sgi_pc_email: 'id_sgi_pc_email',
  usuario: 'usuario',
  email: 'email',
  unidade: 'unidade'
});

exports.Prisma.Sgi_pc_email_ordem_aprovadaScalarFieldEnum = makeEnum({
  id_sgi_pc_email: 'id_sgi_pc_email',
  usuario: 'usuario',
  email: 'email',
  unidade: 'unidade'
});

exports.Prisma.Sgi_pc_email_ordem_compraScalarFieldEnum = makeEnum({
  id_sgi_pc_email_ordem_compra: 'id_sgi_pc_email_ordem_compra',
  usuario: 'usuario',
  email: 'email',
  unidade: 'unidade'
});

exports.Prisma.Sgi_plano_de_acaoScalarFieldEnum = makeEnum({
  id_sgi_plano_de_acao: 'id_sgi_plano_de_acao',
  documento: 'documento',
  acao: 'acao',
  por_que: 'por_que',
  como: 'como',
  quem: 'quem',
  onde: 'onde',
  prazo: 'prazo',
  vencimento: 'vencimento',
  status_plano_de_acao: 'status_plano_de_acao',
  observacao: 'observacao',
  unidade: 'unidade'
});

exports.Prisma.Sgi_preventiva_checklist_itensScalarFieldEnum = makeEnum({
  id_sgi_preventiva_checklist_itens: 'id_sgi_preventiva_checklist_itens',
  classificacao: 'classificacao',
  descricao: 'descricao',
  tipo_motor: 'tipo_motor',
  revisao_hrs: 'revisao_hrs'
});

exports.Prisma.Sgi_preventiva_checklist_principalScalarFieldEnum = makeEnum({
  id_sgi_preventiva_checklist_principal: 'id_sgi_preventiva_checklist_principal',
  frota: 'frota',
  tipo_motor: 'tipo_motor',
  horimetro: 'horimetro',
  data_manuntencao: 'data_manuntencao',
  numero_os: 'numero_os',
  mecanico: 'mecanico',
  tipo_manuntencao_hora: 'tipo_manuntencao_hora',
  hora_inicial: 'hora_inicial',
  hora_final: 'hora_final',
  status_checklist: 'status_checklist',
  nome_tecnico_responsavel: 'nome_tecnico_responsavel',
  nome_encarregado_manuntencao: 'nome_encarregado_manuntencao',
  tecnico_responsavel: 'tecnico_responsavel',
  encarregado_manuntencao: 'encarregado_manuntencao',
  data_hora_finalizacao_checklist: 'data_hora_finalizacao_checklist'
});

exports.Prisma.Sgi_preventiva_checklist_principal_itensScalarFieldEnum = makeEnum({
  id_sgi_preventiva_checklist_principal_itens: 'id_sgi_preventiva_checklist_principal_itens',
  id_sgi_preventiva_checklist_principal: 'id_sgi_preventiva_checklist_principal',
  classificacao: 'classificacao',
  descricao: 'descricao',
  tipo_motor: 'tipo_motor',
  status_item: 'status_item',
  revisao_hrs: 'revisao_hrs',
  observacao: 'observacao'
});

exports.Prisma.Sgi_preventiva_checklist_principal_itens_statusScalarFieldEnum = makeEnum({
  id_sgi_preventiva_checklist_principal_itens_status: 'id_sgi_preventiva_checklist_principal_itens_status',
  status_checklist: 'status_checklist',
  sigla: 'sigla'
});

exports.Prisma.Sgi_preventiva_empilhadeiraScalarFieldEnum = makeEnum({
  id_sgi_preventiva_empilhadeira: 'id_sgi_preventiva_empilhadeira',
  unidade: 'unidade',
  empilhadeira: 'empilhadeira',
  hora_atual: 'hora_atual',
  proxima_preventiva: 'proxima_preventiva',
  horas_restantes: 'horas_restantes',
  status_preventiva: 'status_preventiva',
  ultima_atualizacao: 'ultima_atualizacao',
  usuario_responsavel: 'usuario_responsavel',
  numero_os: 'numero_os'
});

exports.Prisma.Sgi_preventivasScalarFieldEnum = makeEnum({
  id_sgi_preventivas: 'id_sgi_preventivas',
  placa: 'placa',
  data_revisao_concluida: 'data_revisao_concluida',
  status_preventivas: 'status_preventivas',
  data_ultima_revisao: 'data_ultima_revisao',
  data_proxima_revisao: 'data_proxima_revisao',
  dias_restantes: 'dias_restantes',
  documentos: 'documentos',
  documentos_nome: 'documentos_nome',
  responsavel: 'responsavel',
  preventivas: 'preventivas',
  data_atualizacao: 'data_atualizacao'
});

exports.Prisma.Sgi_produtos_testeScalarFieldEnum = makeEnum({
  id_produtos_teste: 'id_produtos_teste',
  nome_produto: 'nome_produto',
  valor_produto: 'valor_produto',
  validade_produto: 'validade_produto',
  quantidade_estoque: 'quantidade_estoque'
});

exports.Prisma.Sgi_setor_compraScalarFieldEnum = makeEnum({
  id_sgi_setor_compra: 'id_sgi_setor_compra',
  setor: 'setor',
  valor_total_setor: 'valor_total_setor'
});

exports.Prisma.Sgi_solicitacao_compraScalarFieldEnum = makeEnum({
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  num_ordem_servico: 'num_ordem_servico',
  data_solicitacao: 'data_solicitacao',
  solicitante: 'solicitante',
  setor: 'setor',
  prazo_pagamento: 'prazo_pagamento',
  centro_custo: 'centro_custo',
  tipo_pedido: 'tipo_pedido',
  tipo_compra: 'tipo_compra',
  motivo: 'motivo',
  data_atualizacao: 'data_atualizacao',
  usuario_responsavel: 'usuario_responsavel',
  status_solicitacao_compra: 'status_solicitacao_compra',
  tipo_solicitacao: 'tipo_solicitacao',
  observacao: 'observacao',
  responsavel_cancelamento: 'responsavel_cancelamento',
  data_hora_cancelamento: 'data_hora_cancelamento',
  motivo_cancelamento: 'motivo_cancelamento'
});

exports.Prisma.Sgi_solicitacao_compra_itensScalarFieldEnum = makeEnum({
  id_sgi_solicitacao_compra_itens: 'id_sgi_solicitacao_compra_itens',
  id_sgi_solicitacao_compra: 'id_sgi_solicitacao_compra',
  quantidade: 'quantidade',
  descricao: 'descricao',
  especificacao_adicional: 'especificacao_adicional',
  valor_unitario: 'valor_unitario',
  entrega: 'entrega',
  total: 'total',
  saldo: 'saldo',
  ids_prod_em_estoque: 'ids_prod_em_estoque'
});

exports.Prisma.Sof_working_times_remarksScalarFieldEnum = makeEnum({
  id_sof_working_times_remarks: 'id_sof_working_times_remarks',
  navioviagem: 'navioviagem',
  id_chave_working_times: 'id_chave_working_times',
  remarks: 'remarks'
});

exports.Prisma.Tbl_sys_messageScalarFieldEnum = makeEnum({
  id: 'id',
  cod_group: 'cod_group',
  text_message: 'text_message',
  start_date: 'start_date',
  end_date: 'end_date'
});

exports.Prisma.Telegram_cadastroScalarFieldEnum = makeEnum({
  id_telegram_cadastro: 'id_telegram_cadastro',
  sistema: 'sistema',
  descricao: 'descricao',
  chat_id: 'chat_id',
  bot_token: 'bot_token'
});

exports.Prisma.TernoScalarFieldEnum = makeEnum({
  id_terno: 'id_terno',
  id_terno_principal: 'id_terno_principal',
  placa: 'placa',
  status: 'status',
  data: 'data',
  terno: 'terno'
});

exports.Prisma.Terno_frotaScalarFieldEnum = makeEnum({
  id_terno_frota: 'id_terno_frota',
  placa: 'placa',
  indicador: 'indicador',
  frota_status: 'frota_status',
  data_hora: 'data_hora',
  terno: 'terno',
  obs: 'obs'
});

exports.Prisma.Terno_logScalarFieldEnum = makeEnum({
  id_terno_log: 'id_terno_log',
  id_terno_principal: 'id_terno_principal',
  frota: 'frota',
  placa: 'placa',
  terno_status: 'terno_status',
  caminhao_status: 'caminhao_status',
  data_carregamento: 'data_carregamento',
  data_transito: 'data_transito',
  data_disponivel: 'data_disponivel',
  diff_trans_carreg: 'diff_trans_carreg',
  diff_dispo_trans: 'diff_dispo_trans',
  diff_carreg_dispo: 'diff_carreg_dispo',
  navio_nome: 'navio_nome',
  navio_viagem: 'navio_viagem'
});

exports.Prisma.Terno_principalScalarFieldEnum = makeEnum({
  id_terno_principal: 'id_terno_principal',
  navio_nome: 'navio_nome',
  navio_viagem: 'navio_viagem',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim'
});

exports.Prisma.Trem_viagemScalarFieldEnum = makeEnum({
  id_trem_viagem: 'id_trem_viagem',
  viagem: 'viagem',
  tempo_bruto: 'tempo_bruto',
  tempo_liquido: 'tempo_liquido',
  tempo_impacto: 'tempo_impacto',
  data_viagem: 'data_viagem',
  quantidade: 'quantidade',
  status_trem: 'status_trem',
  tempo_ciclo: 'tempo_ciclo',
  tempo_impacto_ciclo: 'tempo_impacto_ciclo'
});

exports.Prisma.Trem_viagem_dadosScalarFieldEnum = makeEnum({
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  viagem: 'viagem',
  linha: 'linha',
  quantidade: 'quantidade',
  posicionamento: 'posicionamento',
  abertura: 'abertura',
  descarga_inicio: 'descarga_inicio',
  descarga_fim: 'descarga_fim',
  fechamento: 'fechamento',
  retirada: 'retirada',
  tc: 'tc',
  cf: 'cf',
  ec: 'ec',
  desc_bruta: 'desc_bruta',
  desc_liquida: 'desc_liquida',
  tempo_impactos: 'tempo_impactos',
  tempo_troca: 'tempo_troca',
  telegram_usuario: 'telegram_usuario',
  telegram_hora: 'telegram_hora',
  usuario: 'usuario'
});

exports.Prisma.Trem_viagem_dados_empilhadeirasScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_empilhadeiras: 'id_trem_viagem_dados_empilhadeiras',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  descricao: 'descricao',
  modelo: 'modelo'
});

exports.Prisma.Trem_viagem_dados_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_impactos: 'id_trem_viagem_dados_impactos',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  tempo: 'tempo',
  impacto: 'impacto',
  motivos: 'motivos',
  empresa: 'empresa'
});

exports.Prisma.Trem_viagem_dados_vagoesScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes: 'id_trem_viagem_dados_vagoes',
  id_trem_viagem_dados: 'id_trem_viagem_dados',
  numero: 'numero',
  descricao: 'descricao',
  vagoes: 'vagoes',
  nf: 'nf',
  material: 'material',
  tons: 'tons',
  vao: 'vao',
  tons_2: 'tons_2',
  vao_2: 'vao_2',
  obs: 'obs',
  linha: 'linha',
  data_atual: 'data_atual'
});

exports.Prisma.Trem_viagem_dados_vagoes_emailScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes_email: 'id_trem_viagem_dados_vagoes_email',
  nome: 'nome',
  email: 'email'
});

exports.Prisma.Trem_viagem_dados_vagoes_planejamentoScalarFieldEnum = makeEnum({
  id_trem_viagem_dados_vagoes_planejamento: 'id_trem_viagem_dados_vagoes_planejamento',
  viagem: 'viagem',
  linha: 'linha',
  vagao: 'vagao',
  nf: 'nf',
  material: 'material',
  tons: 'tons',
  vao: 'vao',
  tons_2: 'tons_2',
  vao_2: 'vao_2',
  obs: 'obs',
  data_hora_atualizacao: 'data_hora_atualizacao'
});

exports.Prisma.Trem_viagem_fonte_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_fonte_impactos: 'id_trem_viagem_fonte_impactos',
  empresa: 'empresa'
});

exports.Prisma.Trem_viagem_impactosScalarFieldEnum = makeEnum({
  id_trem_viagem_impactos: 'id_trem_viagem_impactos',
  impacto: 'impacto',
  empresa: 'empresa'
});

exports.Prisma.Trem_viagem_linhasScalarFieldEnum = makeEnum({
  id_trem_viagem_linha: 'id_trem_viagem_linha',
  linha: 'linha'
});

exports.Prisma.Trem_viagem_qualidadeScalarFieldEnum = makeEnum({
  id_trem_viagem_qualidade: 'id_trem_viagem_qualidade',
  viagem: 'viagem',
  lote: 'lote',
  linha: 'linha',
  ftt: 'ftt',
  lateral: 'lateral',
  base: 'base',
  rasgo: 'rasgo',
  impressao: 'impressao',
  arame_fardo: 'arame_fardo',
  inseto: 'inseto',
  desalinhado_max: 'desalinhado_max',
  desalinhado_random: 'desalinhado_random'
});

exports.Prisma.Trem_viagem_qualidade_fotosScalarFieldEnum = makeEnum({
  id_trem_viagem_qualidade_fotos: 'id_trem_viagem_qualidade_fotos',
  id_trem_viagem_qualidade: 'id_trem_viagem_qualidade',
  arquivo: 'arquivo',
  url: 'url'
});

exports.Prisma.Troca_turnoScalarFieldEnum = makeEnum({
  id_troca_turno: 'id_troca_turno',
  data_vagao: 'data_vagao',
  turno: 'turno',
  assist_logistica: 'assist_logistica',
  lote: 'lote',
  linha: 'linha',
  status_troca: 'status_troca'
});

exports.Prisma.Troca_turno_assistente_logisticaScalarFieldEnum = makeEnum({
  id_troca_turno_assistente_logistica: 'id_troca_turno_assistente_logistica',
  nome: 'nome'
});

exports.Prisma.Troca_turno_equipamentoScalarFieldEnum = makeEnum({
  id_troca_turno_equipamento: 'id_troca_turno_equipamento',
  id_troca_turno: 'id_troca_turno',
  maquina: 'maquina',
  modelo: 'modelo',
  status_maquina: 'status_maquina',
  observacao: 'observacao'
});

exports.Prisma.Troca_turno_equipamento_eventsScalarFieldEnum = makeEnum({
  id_troca_turno_equipamento_events: 'id_troca_turno_equipamento_events',
  id_troca_turno_equipamento: 'id_troca_turno_equipamento',
  id_troca_turno: 'id_troca_turno',
  maquina: 'maquina',
  modelo: 'modelo',
  evento: 'evento'
});

exports.Prisma.Troca_turno_equipamento_padraoScalarFieldEnum = makeEnum({
  id_troca_turno_equipamento_padrao: 'id_troca_turno_equipamento_padrao',
  maquina: 'maquina',
  modelo: 'modelo'
});

exports.Prisma.Troca_turno_eventos_padraoScalarFieldEnum = makeEnum({
  id_troca_turno_eventos_padrao: 'id_troca_turno_eventos_padrao',
  eventos: 'eventos'
});

exports.Prisma.Troca_turno_navioScalarFieldEnum = makeEnum({
  id_troca_turno_navio: 'id_troca_turno_navio',
  data_navio: 'data_navio',
  turno: 'turno',
  assist_logistica: 'assist_logistica'
});

exports.Prisma.Troca_turno_navio_geral_obsScalarFieldEnum = makeEnum({
  id_troca_turno_navio_geral_obs: 'id_troca_turno_navio_geral_obs',
  id_troca_turno_navio: 'id_troca_turno_navio',
  observacao_geral: 'observacao_geral'
});

exports.Prisma.Troca_turno_navio_obsScalarFieldEnum = makeEnum({
  id_troca_turno_navio_obs: 'id_troca_turno_navio_obs',
  id_troca_turno: 'id_troca_turno',
  descricao: 'descricao',
  observacao: 'observacao',
  observacao_geral: 'observacao_geral'
});

exports.Prisma.Troca_turno_navio_stowplanScalarFieldEnum = makeEnum({
  id_troca_turno_navio_stowplan: 'id_troca_turno_navio_stowplan',
  id_troca_turno_navio: 'id_troca_turno_navio',
  porao: 'porao',
  camada: 'camada',
  status_navio: 'status_navio'
});

exports.Prisma.Troca_turno_navio_watchlistScalarFieldEnum = makeEnum({
  id_troca_turno_navio_watchlist: 'id_troca_turno_navio_watchlist',
  id_troca_turno_navio: 'id_troca_turno_navio',
  gang: 'gang',
  hold: 'hold',
  ni: 'ni',
  disport: 'disport',
  ve: 've',
  units: 'units',
  tons: 'tons',
  material: 'material',
  marks: 'marks'
});

exports.Prisma.Troca_turno_obsScalarFieldEnum = makeEnum({
  id_troca_turno_obs: 'id_troca_turno_obs',
  id_troca_turno: 'id_troca_turno',
  tarefa: 'tarefa',
  status_tarefa: 'status_tarefa',
  observacao: 'observacao'
});

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  login: 'login',
  password: 'password',
  status: 'status',
  role: 'role'
});

exports.Prisma.Users_groupsScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  group_id: 'group_id'
});

exports.Prisma.Users_suzanog_groupsScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  group_id: 'group_id'
});

exports.Prisma.Users_suzanog5ScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  login: 'login',
  password: 'password',
  role: 'role'
});

exports.Prisma.Webflow_cadastro_email_contatoScalarFieldEnum = makeEnum({
  id_webflow_cadastro_email_contato: 'id_webflow_cadastro_email_contato',
  login: 'login'
});

exports.Prisma.Webflow_cadastro_unidadesScalarFieldEnum = makeEnum({
  id_webflow_cadastro_unidades: 'id_webflow_cadastro_unidades',
  areas: 'areas'
});

exports.Prisma.Webflow_curriculo_estagiarioScalarFieldEnum = makeEnum({
  id_webflow_curriculo_estagiario: 'id_webflow_curriculo_estagiario',
  descricao: 'descricao'
});

exports.Prisma.Webflow_curriculo_funcionarioScalarFieldEnum = makeEnum({
  id_webflow_curriculo_funcionario: 'id_webflow_curriculo_funcionario',
  descricao: 'descricao'
});

exports.Prisma.Webflow_files_tableScalarFieldEnum = makeEnum({
  fileid: 'fileid',
  userid: 'userid',
  binaryvalue: 'binaryvalue',
  filename: 'filename',
  filetype: 'filetype'
});

exports.Prisma.Webflow_files_table_estagiarioScalarFieldEnum = makeEnum({
  fileid: 'fileid',
  userid: 'userid',
  binaryvalue: 'binaryvalue',
  filename: 'filename',
  filetype: 'filetype'
});

exports.Prisma.Webflow_formulario_contatosScalarFieldEnum = makeEnum({
  id_webflow_formulario_contatos: 'id_webflow_formulario_contatos',
  local_de_envio: 'local_de_envio',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  asssunto: 'asssunto',
  mensagem: 'mensagem'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  DescricaoEmbarque: 'DescricaoEmbarque',
  EmbarqueNavio: 'EmbarqueNavio',
  EmbarqueNavio_imagem_camada: 'EmbarqueNavio_imagem_camada',
  EmbarqueSOF: 'EmbarqueSOF',
  Navio_Sof_Armador: 'Navio_Sof_Armador',
  EmbarqueSOF_Arquivos: 'EmbarqueSOF_Arquivos',
  EmbarqueSOF_Cabecalho: 'EmbarqueSOF_Cabecalho',
  EmbarqueSOF_Coluna_Cabecalho: 'EmbarqueSOF_Coluna_Cabecalho',
  EmbarqueSOF_HOLD_Inspection: 'EmbarqueSOF_HOLD_Inspection',
  EmbarqueSOF_Lista_Cabecalho: 'EmbarqueSOF_Lista_Cabecalho',
  EmbarqueSOF_Port_Discharge: 'EmbarqueSOF_Port_Discharge',
  EmbarqueSOF_Ships_Particular: 'EmbarqueSOF_Ships_Particular',
  EmbarqueSOF_StowPlan: 'EmbarqueSOF_StowPlan',
  EmbarqueSOF_TimeLine: 'EmbarqueSOF_TimeLine',
  EmbarqueSOF_WorkingTimes: 'EmbarqueSOF_WorkingTimes',
  EmbarqueSOF_email: 'EmbarqueSOF_email',
  EmbarqueSOF_qualidade: 'EmbarqueSOF_qualidade',
  EmbarqueSOF_qualidade_foto: 'EmbarqueSOF_qualidade_foto',
  adonis_schema: 'adonis_schema',
  applications: 'applications',
  atualizar_sheets: 'atualizar_sheets',
  cadastro_agencia: 'cadastro_agencia',
  cadastro_armador: 'cadastro_armador',
  cadastro_navio: 'cadastro_navio',
  chamado_responsavel_cadastro: 'chamado_responsavel_cadastro',
  chamados: 'chamados',
  chamados_historico: 'chamados_historico',
  chamados_setor: 'chamados_setor',
  contas_cadastro_bancos: 'contas_cadastro_bancos',
  desempenho_assinatura: 'desempenho_assinatura',
  desempenho_assinatura_desempenho: 'desempenho_assinatura_desempenho',
  desempenho_avaliacao: 'desempenho_avaliacao',
  desempenho_item_desempenho: 'desempenho_item_desempenho',
  desempenho_itens: 'desempenho_itens',
  desempenho_itens_cadastro: 'desempenho_itens_cadastro',
  desempenho_itens_desempenho_cadastro: 'desempenho_itens_desempenho_cadastro',
  desempenho_setor_cadastro: 'desempenho_setor_cadastro',
  embarque_poroes: 'embarque_poroes',
  empilhadeira_checklist_controle_email: 'empilhadeira_checklist_controle_email',
  empilhadeiras_area_cadastro: 'empilhadeiras_area_cadastro',
  empilhadeiras_cadastro: 'empilhadeiras_cadastro',
  empilhadeiras_checklist: 'empilhadeiras_checklist',
  empilhadeiras_checklist_itens: 'empilhadeiras_checklist_itens',
  empilhadeiras_checklist_operadores_2: 'empilhadeiras_checklist_operadores_2',
  empilhadeiras_checklist_verificacao: 'empilhadeiras_checklist_verificacao',
  empilhadeiras_checklist_verificacao_modelo: 'empilhadeiras_checklist_verificacao_modelo',
  empilhadeiras_cod_acao_cadastro: 'empilhadeiras_cod_acao_cadastro',
  empilhadeiras_cod_legenda: 'empilhadeiras_cod_legenda',
  empilhadeiras_local_cadastro: 'empilhadeiras_local_cadastro',
  empilhadeiras_modelo: 'empilhadeiras_modelo',
  empilhadeiras_notificacoes: 'empilhadeiras_notificacoes',
  empilhadeiras_op_cadastro: 'empilhadeiras_op_cadastro',
  empilhadeiras_situacao: 'empilhadeiras_situacao',
  empilhadeiras_status: 'empilhadeiras_status',
  empilhadeiras_status_cadastro: 'empilhadeiras_status_cadastro',
  empilhadeiras_statusatual: 'empilhadeiras_statusatual',
  empilhadeiras_troca_de_gas: 'empilhadeiras_troca_de_gas',
  empilhadeiras_turno_cadastro: 'empilhadeiras_turno_cadastro',
  faturamento_cte: 'faturamento_cte',
  faturamento_performace_placas: 'faturamento_performace_placas',
  faturamento_placa_cadastro: 'faturamento_placa_cadastro',
  frota_local_cadastro: 'frota_local_cadastro',
  frota_status: 'frota_status',
  g5_contato: 'g5_contato',
  gas_cadastro: 'gas_cadastro',
  gas_inventario: 'gas_inventario',
  group_permission: 'group_permission',
  groups: 'groups',
  imp_empilhadeiras_cadastro: 'imp_empilhadeiras_cadastro',
  imp_manutencao_motivos: 'imp_manutencao_motivos',
  imp_manutencao_motivos_mecanico: 'imp_manutencao_motivos_mecanico',
  imp_manutencao_motivos_principal: 'imp_manutencao_motivos_principal',
  imp_trem_carregamento: 'imp_trem_carregamento',
  imp_trem_carregamento_empilhadeira: 'imp_trem_carregamento_empilhadeira',
  imp_trem_carregamento_viagem: 'imp_trem_carregamento_viagem',
  imp_trem_viagem: 'imp_trem_viagem',
  imp_trem_viagem_dados: 'imp_trem_viagem_dados',
  imp_trem_viagem_dados_empilhadeiras: 'imp_trem_viagem_dados_empilhadeiras',
  imp_trem_viagem_dados_impactos: 'imp_trem_viagem_dados_impactos',
  imp_trem_viagem_dados_vagoes: 'imp_trem_viagem_dados_vagoes',
  imp_trem_viagem_dados_vagoes_email: 'imp_trem_viagem_dados_vagoes_email',
  imp_trem_viagem_dados_vagoes_planejamento: 'imp_trem_viagem_dados_vagoes_planejamento',
  imp_trem_viagem_fonte_impactos: 'imp_trem_viagem_fonte_impactos',
  imp_trem_viagem_impactos: 'imp_trem_viagem_impactos',
  imp_trem_viagem_linhas: 'imp_trem_viagem_linhas',
  imp_trem_viagem_qualidade: 'imp_trem_viagem_qualidade',
  imp_trem_viagem_qualidade_fotos: 'imp_trem_viagem_qualidade_fotos',
  indicador_navio: 'indicador_navio',
  indicador_navio_eventos: 'indicador_navio_eventos',
  indicador_navio_hora: 'indicador_navio_hora',
  indicador_navio_impactos: 'indicador_navio_impactos',
  indicador_navio_prancha_ternos: 'indicador_navio_prancha_ternos',
  indicador_navio_terno: 'indicador_navio_terno',
  indicador_navio_terno_lingadas: 'indicador_navio_terno_lingadas',
  indicador_navio_turno: 'indicador_navio_turno',
  indicadores_cadastro_navio: 'indicadores_cadastro_navio',
  inventario_dados: 'inventario_dados',
  inventario_operacoes_turno: 'inventario_operacoes_turno',
  inventario_principal: 'inventario_principal',
  inventario_vao: 'inventario_vao',
  line_up: 'line_up',
  log: 'log',
  manuntencao_combustivel: 'manuntencao_combustivel',
  manutencao_motivos: 'manutencao_motivos',
  manutencao_motivos_mecanico: 'manutencao_motivos_mecanico',
  manutencao_motivos_principal: 'manutencao_motivos_principal',
  mecanica_checklist: 'mecanica_checklist',
  mecanica_checklist_foto: 'mecanica_checklist_foto',
  mecanica_checklist_inconformidade: 'mecanica_checklist_inconformidade',
  mecanica_checklist_itens: 'mecanica_checklist_itens',
  mecanica_checklist_principal: 'mecanica_checklist_principal',
  mecanica_disponibilidade: 'mecanica_disponibilidade',
  mecanica_frota: 'mecanica_frota',
  mecanica_painel: 'mecanica_painel',
  mecanica_semirreboque: 'mecanica_semirreboque',
  modules: 'modules',
  procedimentos: 'procedimentos',
  projetos: 'projetos',
  projetos_capex_opex: 'projetos_capex_opex',
  projetos_gastos: 'projetos_gastos',
  projetos_itens: 'projetos_itens',
  projetos_itens_empresa: 'projetos_itens_empresa',
  projetos_principal: 'projetos_principal',
  qsms_inspecao_extintor: 'qsms_inspecao_extintor',
  qsms_inspecao_extintor_cadastro: 'qsms_inspecao_extintor_cadastro',
  qsms_inspecao_extintor_dados: 'qsms_inspecao_extintor_dados',
  qsms_inspecao_extintor_detalhes: 'qsms_inspecao_extintor_detalhes',
  qsms_inspecao_extintor_detalhes_cadastro: 'qsms_inspecao_extintor_detalhes_cadastro',
  remember_me_token: 'remember_me_token',
  reuniao_acao: 'reuniao_acao',
  reuniao_grupo: 'reuniao_grupo',
  reuniao_informacao_geral: 'reuniao_informacao_geral',
  reuniao_participantes: 'reuniao_participantes',
  reuniao_participantes_grupo: 'reuniao_participantes_grupo',
  reuniao_temas: 'reuniao_temas',
  rh_app_chamados: 'rh_app_chamados',
  rh_app_documentos: 'rh_app_documentos',
  rh_web_chamados_tipo_cadastro: 'rh_web_chamados_tipo_cadastro',
  routes: 'routes',
  sc_log_sgi: 'sc_log_sgi',
  sec_biometriausers: 'sec_biometriausers',
  sec_g5apps: 'sec_g5apps',
  sec_g5groups: 'sec_g5groups',
  sec_g5groups_apps: 'sec_g5groups_apps',
  sec_g5registro_login: 'sec_g5registro_login',
  sec_g5users: 'sec_g5users',
  sec_g5users_groups: 'sec_g5users_groups',
  sgi_absenteismo_colaborador: 'sgi_absenteismo_colaborador',
  sgi_absenteismo_colaborador_setor: 'sgi_absenteismo_colaborador_setor',
  sgi_aso: 'sgi_aso',
  sgi_cargo: 'sgi_cargo',
  sgi_cnh: 'sgi_cnh',
  sgi_colaborador_ordem_servico: 'sgi_colaborador_ordem_servico',
  sgi_colaborador_ordem_servico_epi: 'sgi_colaborador_ordem_servico_epi',
  sgi_colaborador_ordem_servico_informacao_fixa: 'sgi_colaborador_ordem_servico_informacao_fixa',
  sgi_colaborador_ordem_servico_risco_avaliacao: 'sgi_colaborador_ordem_servico_risco_avaliacao',
  sgi_colaboradores: 'sgi_colaboradores',
  sgi_colaboradores_cargo_cadastro: 'sgi_colaboradores_cargo_cadastro',
  sgi_colaboradores_curso: 'sgi_colaboradores_curso',
  sgi_colaboradores_curso_lista_presenca: 'sgi_colaboradores_curso_lista_presenca',
  sgi_colaboradores_curso_lista_presenca_colaboradores: 'sgi_colaboradores_curso_lista_presenca_colaboradores',
  sgi_colaboradores_curso_lista_presenca_principal: 'sgi_colaboradores_curso_lista_presenca_principal',
  sgi_colaboradores_curso_questionario: 'sgi_colaboradores_curso_questionario',
  sgi_colaboradores_curso_questionario_alternativas: 'sgi_colaboradores_curso_questionario_alternativas',
  sgi_colaboradores_curso_questionario_auto_avaliacao: 'sgi_colaboradores_curso_questionario_auto_avaliacao',
  sgi_colaboradores_curso_questionario_auto_avaliacao_cadastro: 'sgi_colaboradores_curso_questionario_auto_avaliacao_cadastro',
  sgi_colaboradores_curso_questionario_cadastro: 'sgi_colaboradores_curso_questionario_cadastro',
  sgi_colaboradores_curso_video: 'sgi_colaboradores_curso_video',
  sgi_colaboradores_tela_cursos: 'sgi_colaboradores_tela_cursos',
  sgi_controle_cargos: 'sgi_controle_cargos',
  sgi_cronotacografo: 'sgi_cronotacografo',
  sgi_curso_atocontratacao: 'sgi_curso_atocontratacao',
  sgi_curso_atocontratacao_cargo: 'sgi_curso_atocontratacao_cargo',
  sgi_curso_meioambiente: 'sgi_curso_meioambiente',
  sgi_curso_meioambiente_cargo: 'sgi_curso_meioambiente_cargo',
  sgi_curso_qualidade: 'sgi_curso_qualidade',
  sgi_curso_qualidade_cargo: 'sgi_curso_qualidade_cargo',
  sgi_curso_sso: 'sgi_curso_sso',
  sgi_curso_sso_cargo: 'sgi_curso_sso_cargo',
  sgi_cursos: 'sgi_cursos',
  sgi_cursos_conteudo: 'sgi_cursos_conteudo',
  sgi_destinatario_compra: 'sgi_destinatario_compra',
  sgi_documentacao_colaboradores: 'sgi_documentacao_colaboradores',
  sgi_documentacao_colaboradores_tipo_documento: 'sgi_documentacao_colaboradores_tipo_documento',
  sgi_epi: 'sgi_epi',
  sgi_estoque_detalhe_produto: 'sgi_estoque_detalhe_produto',
  sgi_estoque_detalhe_produto2: 'sgi_estoque_detalhe_produto2',
  sgi_estoque_detalhe_produto_original: 'sgi_estoque_detalhe_produto_original',
  sgi_estoque_produto: 'sgi_estoque_produto',
  sgi_estoque_produto_copy_backup: 'sgi_estoque_produto_copy_backup',
  sgi_faltas: 'sgi_faltas',
  sgi_faltas_apreciacao_cadastro: 'sgi_faltas_apreciacao_cadastro',
  sgi_faltas_motivos_cadastro: 'sgi_faltas_motivos_cadastro',
  sgi_faltas_superior_cadastro: 'sgi_faltas_superior_cadastro',
  sgi_folha_pagamento: 'sgi_folha_pagamento',
  sgi_folha_pagamento_tipo: 'sgi_folha_pagamento_tipo',
  sgi_fornecedor: 'sgi_fornecedor',
  sgi_frota_cadastro: 'sgi_frota_cadastro',
  sgi_frota_carretas_documentos: 'sgi_frota_carretas_documentos',
  sgi_frota_cavalo_documentos: 'sgi_frota_cavalo_documentos',
  sgi_incidentes_rai_cat: 'sgi_incidentes_rai_cat',
  sgi_incidentes_rai_conclusao: 'sgi_incidentes_rai_conclusao',
  sgi_incidentes_rai_depoimento: 'sgi_incidentes_rai_depoimento',
  sgi_incidentes_rai_fator_de_risco_cadastro: 'sgi_incidentes_rai_fator_de_risco_cadastro',
  sgi_incidentes_rai_levantamento_causas: 'sgi_incidentes_rai_levantamento_causas',
  sgi_incidentes_rai_levantamento_causas_cadastro: 'sgi_incidentes_rai_levantamento_causas_cadastro',
  sgi_incidentes_rai_lista_prescenca: 'sgi_incidentes_rai_lista_prescenca',
  sgi_incidentes_rai_lista_prescenca_principal: 'sgi_incidentes_rai_lista_prescenca_principal',
  sgi_incidentes_rai_principal: 'sgi_incidentes_rai_principal',
  sgi_incidentes_rai_procedimentos: 'sgi_incidentes_rai_procedimentos',
  sgi_incidentes_rai_procedimentos_cadastro: 'sgi_incidentes_rai_procedimentos_cadastro',
  sgi_incidentes_rai_tipo_incidente_cadastro: 'sgi_incidentes_rai_tipo_incidente_cadastro',
  sgi_incidentes_repi_acao: 'sgi_incidentes_repi_acao',
  sgi_incidentes_repi_envolvidos: 'sgi_incidentes_repi_envolvidos',
  sgi_incidentes_repi_foto: 'sgi_incidentes_repi_foto',
  sgi_incidentes_repi_principal: 'sgi_incidentes_repi_principal',
  sgi_inspecao_detalhe: 'sgi_inspecao_detalhe',
  sgi_inspecao_participantes: 'sgi_inspecao_participantes',
  sgi_inspecao_principal: 'sgi_inspecao_principal',
  sgi_inventario_estoque: 'sgi_inventario_estoque',
  sgi_opacimetro: 'sgi_opacimetro',
  sgi_opacimetro_empilhadeira: 'sgi_opacimetro_empilhadeira',
  sgi_ordem_compra: 'sgi_ordem_compra',
  sgi_ordem_compra_data_pagamento: 'sgi_ordem_compra_data_pagamento',
  sgi_ordem_compra_data_pagamento_copy: 'sgi_ordem_compra_data_pagamento_copy',
  sgi_ordem_compra_itens: 'sgi_ordem_compra_itens',
  sgi_ordem_compra_nota_fiscal: 'sgi_ordem_compra_nota_fiscal',
  sgi_ordem_saida: 'sgi_ordem_saida',
  sgi_ordem_servicos: 'sgi_ordem_servicos',
  sgi_ordem_servicos_cadastro_empilhadeiras: 'sgi_ordem_servicos_cadastro_empilhadeiras',
  sgi_ordem_servicos_cadastro_frota: 'sgi_ordem_servicos_cadastro_frota',
  sgi_ordem_servicos_disponibilidade: 'sgi_ordem_servicos_disponibilidade',
  sgi_ordem_servicos_falha_ocorrida: 'sgi_ordem_servicos_falha_ocorrida',
  sgi_ordem_servicos_gestor_manutencao: 'sgi_ordem_servicos_gestor_manutencao',
  sgi_ordem_servicos_local_manutencao: 'sgi_ordem_servicos_local_manutencao',
  sgi_ordem_servicos_mecanicos: 'sgi_ordem_servicos_mecanicos',
  sgi_ordem_servicos_motorista_operador: 'sgi_ordem_servicos_motorista_operador',
  sgi_ordem_servicos_oficinas: 'sgi_ordem_servicos_oficinas',
  sgi_ordem_servicos_placas: 'sgi_ordem_servicos_placas',
  sgi_os: 'sgi_os',
  sgi_pc_email: 'sgi_pc_email',
  sgi_pc_email_ordem_aprovada: 'sgi_pc_email_ordem_aprovada',
  sgi_pc_email_ordem_compra: 'sgi_pc_email_ordem_compra',
  sgi_plano_de_acao: 'sgi_plano_de_acao',
  sgi_preventiva_checklist_itens: 'sgi_preventiva_checklist_itens',
  sgi_preventiva_checklist_principal: 'sgi_preventiva_checklist_principal',
  sgi_preventiva_checklist_principal_itens: 'sgi_preventiva_checklist_principal_itens',
  sgi_preventiva_checklist_principal_itens_status: 'sgi_preventiva_checklist_principal_itens_status',
  sgi_preventiva_empilhadeira: 'sgi_preventiva_empilhadeira',
  sgi_preventivas: 'sgi_preventivas',
  sgi_produtos_teste: 'sgi_produtos_teste',
  sgi_setor_compra: 'sgi_setor_compra',
  sgi_solicitacao_compra: 'sgi_solicitacao_compra',
  sgi_solicitacao_compra_itens: 'sgi_solicitacao_compra_itens',
  sof_working_times_remarks: 'sof_working_times_remarks',
  tbl_sys_message: 'tbl_sys_message',
  telegram_cadastro: 'telegram_cadastro',
  terno: 'terno',
  terno_frota: 'terno_frota',
  terno_log: 'terno_log',
  terno_principal: 'terno_principal',
  trem_viagem: 'trem_viagem',
  trem_viagem_dados: 'trem_viagem_dados',
  trem_viagem_dados_empilhadeiras: 'trem_viagem_dados_empilhadeiras',
  trem_viagem_dados_impactos: 'trem_viagem_dados_impactos',
  trem_viagem_dados_vagoes: 'trem_viagem_dados_vagoes',
  trem_viagem_dados_vagoes_email: 'trem_viagem_dados_vagoes_email',
  trem_viagem_dados_vagoes_planejamento: 'trem_viagem_dados_vagoes_planejamento',
  trem_viagem_fonte_impactos: 'trem_viagem_fonte_impactos',
  trem_viagem_impactos: 'trem_viagem_impactos',
  trem_viagem_linhas: 'trem_viagem_linhas',
  trem_viagem_qualidade: 'trem_viagem_qualidade',
  trem_viagem_qualidade_fotos: 'trem_viagem_qualidade_fotos',
  troca_turno: 'troca_turno',
  troca_turno_assistente_logistica: 'troca_turno_assistente_logistica',
  troca_turno_equipamento: 'troca_turno_equipamento',
  troca_turno_equipamento_events: 'troca_turno_equipamento_events',
  troca_turno_equipamento_padrao: 'troca_turno_equipamento_padrao',
  troca_turno_eventos_padrao: 'troca_turno_eventos_padrao',
  troca_turno_navio: 'troca_turno_navio',
  troca_turno_navio_geral_obs: 'troca_turno_navio_geral_obs',
  troca_turno_navio_obs: 'troca_turno_navio_obs',
  troca_turno_navio_stowplan: 'troca_turno_navio_stowplan',
  troca_turno_navio_watchlist: 'troca_turno_navio_watchlist',
  troca_turno_obs: 'troca_turno_obs',
  users: 'users',
  users_groups: 'users_groups',
  users_suzanog_groups: 'users_suzanog_groups',
  users_suzanog5: 'users_suzanog5',
  webflow_cadastro_email_contato: 'webflow_cadastro_email_contato',
  webflow_cadastro_unidades: 'webflow_cadastro_unidades',
  webflow_curriculo_estagiario: 'webflow_curriculo_estagiario',
  webflow_curriculo_funcionario: 'webflow_curriculo_funcionario',
  webflow_files_table: 'webflow_files_table',
  webflow_files_table_estagiario: 'webflow_files_table_estagiario',
  webflow_formulario_contatos: 'webflow_formulario_contatos'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
